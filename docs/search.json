[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Seja Bem-Vindo ao meu Caderno de Aulas",
    "section": "",
    "text": "Bem-vindo(a) ao meu caderno da disciplina FIP 606 – Análise e Visualização de Dados em Fitopatologia. Este é um caderno de aulas da disciplina FIP 606 - Análise e visualização de dados em Fitopatologia. Ministradas por Emerson Del Ponte no primeiro semetre do ano de 2025.\nEste caderno tem como finalidade auxiliar aos alunos da disciplina a organizarem os estudos e a partir de sua disponibilização no site, pode ser utilizados por outras pessoas que busquem aprender sobre alguns testes ou funcionalidades do R.\nÉ importante pontuar que são apenas scripts e anotações de aula. Sempre busque aprofundar seus conhecimentos em outras fontes.\nAntes de iniciar, aqui vão algumas sugestões de leitura que podem ajudar no processo de aprendizado:\n\nAnálise Estatística com R Para Leigos® – Tradução da 2a Edição\nIntrodução à estatistica com R\nOpenIntro Statistics Fourth Edition\n\nTodos os livros acima são materiais mais iniciantes.\nCaso você seja da área de agrárias e se interesse pelo tema, recomendo fortemente a leitura do livro “R for Plant Disease Epidemiology”.\nE por fim, livros da companhia “O´Reilly”, tem várias E-books interessantes tanto para a linguagem R, quanto para outros programas como Phyton, por exemplo.\nDito isso, vamos começar!"
  },
  {
    "objectID": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta.html",
    "href": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta.html",
    "title": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta",
    "section": "",
    "text": "Nesta aula abordamos estratégias para normalizar dados experimentais por meio de transformações (como a raiz quadrada e o método de Box-Cox), quando a Anova não atender aos pressupostos de normalidade e homocedasticidade. Por fim, introduzimos os modelos não lineares para curvas dose-resposta, utilizando o pacote drc.\n\n\n\n\n\n#install.packages(\"MASS\")\nlibrary(MASS)\n\nWarning: pacote 'MASS' foi compilado no R versão 4.4.3\n\ninsects &lt;- InsectSprays\n\nm1 &lt;- lm(count ~spray, data = insects)\n\nlibrary(DHARMa)\n\nWarning: pacote 'DHARMa' foi compilado no R versão 4.4.3\n\n\nThis is DHARMa 0.4.7. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')\n\nplot(simulateResiduals(m1))\n\n\n\n\n\n\n\n#como não atendeu ao pressuposto de homogeneidade, testamos a transformação dos dados. \n#Inicialmente testa a transformação por raiz quadrada. \n\nm1 &lt;- lm(sqrt(count) ~ spray, data = insects)\nm1\n\n\nCall:\nlm(formula = sqrt(count) ~ spray, data = insects)\n\nCoefficients:\n(Intercept)       sprayB       sprayC       sprayD       sprayE       sprayF  \n     3.7607       0.1160      -2.5158      -1.5963      -1.9512       0.2579  \n\nlibrary(DHARMa)\nplot(simulateResiduals(m1))\n\n\n\n\n\n\n\n#Transformação por log (com +1 para evitar log(0))\nm1_log &lt;- lm(log(count + 1) ~ spray, data = insects)  # +1 para evitar log(0), caso tenha valores zero\nm1_log\n\n\nCall:\nlm(formula = log(count + 1) ~ spray, data = insects)\n\nCoefficients:\n(Intercept)       sprayB       sprayC       sprayD       sprayE       sprayF  \n     2.6967       0.0598      -1.7441      -0.9834      -1.2705       0.1189  \n\nlibrary(DHARMa)\nplot(simulateResiduals(m1_log))\n\n\n\n\n\n\n\n#raiz quadrada é 0.5 e log é 0.Quando lambda é 1 o valor é igual o original. \n#box cox é usado quando o log ou raiz não dá certo. \n#as médias tem que ser com os valores destransformados \n\nboxcox(lm(insects$count+0.1 ~ 1))\nb &lt;- boxcox(lm(insects$count+0.1 ~ 1))\n\n\n\n\n\n\n\nlambda &lt;- b$x[which.max(b$y)] # Extrair o lambda ótimo\nlambda\n\n[1] 0.4242424\n\n# Quando for apresentar as médias, deve-se usar os valores originais (sem transformação).\n# A transformação é aplicada apenas para satisfazer os pressupostos da ANOVA ou regressão.\n\nlibrary(tidyverse) \n\nWarning: pacote 'tidyverse' foi compilado no R versão 4.4.3\n\n\nWarning: pacote 'readr' foi compilado no R versão 4.4.3\n\n\nWarning: pacote 'stringr' foi compilado no R versão 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n✖ dplyr::select() masks MASS::select()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ninsects &lt;- insects |&gt; \n  mutate(count2 = (count^lambda-1)/lambda) |&gt; \n  mutate(count3 = (sqrt(count))) \nhist(insects$count2)\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(gsheet)\n\nWarning: pacote 'gsheet' foi compilado no R versão 4.4.3\n\nestande &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=401662555#gid=401662555\")\nestande\n\n\n  \n\n\n#análise visual dos dados em da emergencia de plantas em função dos inóculos \n\nlibrary(ggplot2)\nestande |&gt; \nggplot(aes(trat,nplants))+\n  geom_point(color = \"gray\")+\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\")+\n    facet_wrap(~ exp)+\n  theme_minimal()+\n  labs(x= \"% de inóculo da semente\",\n       y= \"número de plantas\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\nGerar um modelo para cada experimento\n\nexp1 &lt;- estande |&gt; \n  filter(exp == 1) |&gt;\n  group_by(trat) |&gt; \n  summarise(nplants2 = mean(nplants))\n\nexp1 |&gt; \n  ggplot(aes(trat, nplants2))+\n  geom_point()+\n  ylim(20,60)\n\n\n\n\n\n\n\nm_exp1 &lt;- lm(nplants2 ~ trat, data = exp1)\nsummary(m_exp1)\n\n\nCall:\nlm(formula = nplants2 ~ trat, data = exp1)\n\nResiduals:\n      1       2       3       4       5       6 \n 1.2500  0.7258  1.7016 -2.5968 -2.9435  1.8629 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 52.50000    1.36929  38.341 2.76e-06 ***\ntrat        -0.24194    0.06054  -3.996   0.0162 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.442 on 4 degrees of freedom\nMultiple R-squared:  0.7997,    Adjusted R-squared:  0.7496 \nF-statistic: 15.97 on 1 and 4 DF,  p-value: 0.01618\n\n# Sem summarise, mantendo 'nplants', 'trat' e 'bloco'\nexp1 &lt;- estande |&gt; \n  filter(exp == 1)\n\n# Modelo com trat e bloco\nm_exp1 &lt;- lm(nplants ~ trat + bloco, data = exp1)\nsummary(m_exp1)\n\n\nCall:\nlm(formula = nplants ~ trat + bloco, data = exp1)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-18.0769  -6.7847  -0.7817   4.0522  22.6091 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  75.5833     5.7164  13.222 1.19e-11 ***\ntrat         -0.2419     0.1323  -1.829 0.081623 .  \nbloco        -9.2333     1.9485  -4.739 0.000111 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.67 on 21 degrees of freedom\nMultiple R-squared:  0.5513,    Adjusted R-squared:  0.5086 \nF-statistic:  12.9 on 2 and 21 DF,  p-value: 0.0002216\n\nm_exp1 &lt;- lm(nplants ~ trat + bloco, data = exp1)\nsummary(m_exp1)\n\n\nCall:\nlm(formula = nplants ~ trat + bloco, data = exp1)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-18.0769  -6.7847  -0.7817   4.0522  22.6091 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  75.5833     5.7164  13.222 1.19e-11 ***\ntrat         -0.2419     0.1323  -1.829 0.081623 .  \nbloco        -9.2333     1.9485  -4.739 0.000111 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.67 on 21 degrees of freedom\nMultiple R-squared:  0.5513,    Adjusted R-squared:  0.5086 \nF-statistic:  12.9 on 2 and 21 DF,  p-value: 0.0002216\n\n#Na ausência de inóculo (intercepto), a média de plantas no estande é de 52. A cada aumento de 1% no inóculo, observa-se uma redução de 0,24 no número de plantas.\n\n\n\n\n\n\nexp2 &lt;- estande |&gt; \n  filter(exp == 2)\n\nm_exp2 &lt;- lm(nplants ~ trat , data = exp2)\nsummary(m_exp2)\n\n\nCall:\nlm(formula = nplants ~ trat, data = exp2)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-25.7816  -7.7150   0.5653   8.1929  19.2184 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  60.9857     3.6304  16.798 4.93e-14 ***\ntrat         -0.7007     0.1605  -4.365 0.000247 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.95 on 22 degrees of freedom\nMultiple R-squared:  0.4641,    Adjusted R-squared:  0.4398 \nF-statistic: 19.05 on 1 and 22 DF,  p-value: 0.0002473\n\n\n\n\n\n\nexp3 &lt;- estande |&gt; \n  filter(exp == 3)\n\nm_exp3 &lt;- lm(nplants ~ trat , data = exp3)\nsummary(m_exp3)\n\n\nCall:\nlm(formula = nplants ~ trat, data = exp3)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-26.5887  -3.9597   0.7177   5.5806  19.8952 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  95.7500     2.9529  32.425  &lt; 2e-16 ***\ntrat         -0.7634     0.1306  -5.847 6.97e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.53 on 22 degrees of freedom\nMultiple R-squared:  0.6085,    Adjusted R-squared:  0.5907 \nF-statistic: 34.19 on 1 and 22 DF,  p-value: 6.968e-06\n\n#calcular o slop para o experimento\nm_exp1$coefficients \n\n(Intercept)        trat       bloco \n 75.5833333  -0.2419355  -9.2333333 \n\nm_exp2$coefficients\n\n(Intercept)        trat \n 60.9857143  -0.7006912 \n\nm_exp3$coefficients\n\n(Intercept)        trat \n 95.7500000  -0.7634409 \n\nm_exp1$coefficients\n\n(Intercept)        trat       bloco \n 75.5833333  -0.2419355  -9.2333333 \n\n(0.24 + 0.7 + 0.76)/3\n\n[1] 0.5666667\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(lme4)\n\nCarregando pacotes exigidos: Matrix\n\n\n\nAnexando pacote: 'Matrix'\n\n\nOs seguintes objetos são mascarados por 'package:tidyr':\n\n    expand, pack, unpack\n\nm_misto &lt;- lmer(nplants ~ trat + (1 | exp/bloco),\n                data = estande)\n#acima, o tratamento é efeito fixo, os experimentos e blocos efeitos aleatórios, e os blocos estão dentro dos experimentos.\n\nconfint(m_misto)\n\nComputing profile confidence intervals ...\n\n\n                 2.5 %     97.5 %\n.sig01       3.3332097 14.4218422\n.sig02       7.2377419 47.8269818\n.sigma       9.7314178 13.9359486\n(Intercept) 43.4631239 96.0274587\ntrat        -0.7328972 -0.4044812\n\nsummary(m_misto)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: nplants ~ trat + (1 | exp/bloco)\n   Data: estande\n\nREML criterion at convergence: 575.8\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.21697 -0.63351  0.04292  0.67094  1.92907 \n\nRandom effects:\n Groups    Name        Variance Std.Dev.\n bloco:exp (Intercept)  54.76    7.40   \n exp       (Intercept) 377.43   19.43   \n Residual              134.99   11.62   \nNumber of obs: 72, groups:  bloco:exp, 12; exp, 3\n\nFixed effects:\n            Estimate Std. Error t value\n(Intercept) 69.74524   11.57191   6.027\ntrat        -0.56869    0.08314  -6.840\n\nCorrelation of Fixed Effects:\n     (Intr)\ntrat -0.111\n\nlibrary(car)\n\nCarregando pacotes exigidos: carData\n\n\n\nAnexando pacote: 'car'\n\n\nO seguinte objeto é mascarado por 'package:dplyr':\n\n    recode\n\n\nO seguinte objeto é mascarado por 'package:purrr':\n\n    some\n\nAnova(m_misto)\n\n\n  \n\n\npredict(m_misto, data = estande)\n\nWarning in predict.merMod(m_misto, data = estande): unused arguments ignored\n\n\n       1        2        3        4        5        6        7        8 \n65.59316 64.29370 53.77994 47.28268 63.88709 62.58764 52.07388 45.57661 \n       9       10       11       12       13       14       15       16 \n62.18102 60.88157 50.36781 43.87054 58.76889 57.46943 46.95567 40.45841 \n      17       18       19       20       21       22       23       24 \n51.94462 50.64516 40.13140 33.63414 38.29608 36.99662 26.48286 19.98559 \n      25       26       27       28       29       30       31       32 \n57.58669 50.97129 63.25703 64.55649 55.88062 49.26522 61.55097 62.85042 \n      33       34       35       36       37       38       39       40 \n54.17456 47.55916 59.84490 61.14435 50.76242 44.14702 56.43276 57.73222 \n      41       42       43       44       45       46       47       48 \n43.93815 37.32275 49.60849 50.90795 30.28961 23.67421 35.95995 37.25941 \n      49       50       51       52       53       54       55       56 \n92.93706 93.40959 90.69255 92.58267 91.23100 91.70352 88.98648 90.87660 \n      57       58       59       60       61       62       63       64 \n89.52493 89.99746 87.28042 89.17053 86.11279 86.58532 83.86828 85.75840 \n      65       66       67       68       69       70       71       72 \n79.28852 79.76105 77.04401 78.93413 65.63998 66.11251 63.39547 65.28559 \n\n#P foi siguinificativo\n\nestande |&gt;\n  ggplot(aes(trat, nplants, color = factor(exp)))+\n  geom_point()+\n  #geom_smooth(method = \"lm\", se = FALSE)+\n  geom_abline(intercept = 69.74,\n              slope = -0.568, linewidth = 2)+\n  geom_abline(intercept = 43, slope = -0.73, linetype = \"dashed\")+\n  geom_abline(intercept = 96, slope = -0.40, linetype = \"dashed\")\n\n\n\n\n\n\n\n\n\n\n\nfungi &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=465348652#gid=465348652\")\n\nlibrary(dplyr)\n\n#visualizar os dados \n\nfungi |&gt;\n  group_by(code, dose) |&gt;\n  summarise(germination = mean(germination)) |&gt;\n  ggplot(aes(dose, germination))+\n  geom_point()+\n  geom_line()+\n  #geom_smooth(se = FALSE)+\n  facet_wrap(~code)\n\n`summarise()` has grouped output by 'code'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\nFGT43 &lt;- fungi |&gt;\n  group_by(code, dose) |&gt;\n  summarise(germination = mean(germination)) |&gt;  \nfilter(code == \"FGT43\")\n\n`summarise()` has grouped output by 'code'. You can override using the\n`.groups` argument.\n\n#filtrar para o conjunto de médias de FGT43\n\n#install.packages(\"drc\"), ajustar o modelo não linear aos dados \n\nlibrary(drc)\n\nWarning: pacote 'drc' foi compilado no R versão 4.4.3\n\n\n\n'drc' has been loaded.\n\nPlease cite R and 'drc' if used for a publication,\nfor references type 'citation()' and 'citation('drc')'.\n\n\nAnexando pacote: 'drc'\n\nOs seguintes objetos são mascarados por 'package:stats':\n\n    gaussian, getInitial\n\nm43 &lt;- drm(germination ~ dose,\n           data = FGT43,\n           fct = W2.3())\n  \nm43 &lt;- drm(germination ~dose,\n           data = FGT43, \n           fct = LL.3()) #começar a testar com o modelo LL.3 \n\nsummary(m43)\n\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  1.219692   0.175081  6.9664  0.006069 ** \nd:(Intercept) 48.486911   1.456007 33.3013 5.952e-05 ***\ne:(Intercept)  0.495895   0.060851  8.1494  0.003864 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 1.636105 (3 degrees of freedom)\n\nAIC(m43) #quanto &lt; o AIC, melhor. \n\n[1] 26.7762\n\nplot(m43)\n\n\n\n\n\n\n\nED(m43, 50)\n\n\nEstimated effective doses\n\n       Estimate Std. Error\ne:1:50 0.495895   0.060851\n\n#Estima a EC50.\n\n#testar para cada isolado, qual modelo fica melhor.\n\n#install.packages(\"ec50estimator\")\nlibrary(ec50estimator)\n\nWarning: pacote 'ec50estimator' foi compilado no R versão 4.4.3\n\ndf_ec50 = estimate_EC50(germination ~ dose,\n                        data =fungi,\n                        isolate_col = \"code\",\n                        strata_col =  c(\"state\"),\n                        interval = \"delta\",\n                        fct = drc::LL.3())\nhead(df_ec50)\n\n\n  \n\n\nlibrary(ggplot2)\ndf_ec50 |&gt;\n  ggplot(aes(reorder(ID, Estimate), Estimate))+ \n  geom_point()+\n  coord_flip()+\n  labs(y = \"EC50\",\n       x = \"Isolado\")\n\n\n\n\n\n\n\ndf_ec50 |&gt;\n  ggplot(aes(x = Estimate))+\n  geom_histogram(bins = 5, color = \"white\")"
  },
  {
    "objectID": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta.html#transformação-de-dados",
    "href": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta.html#transformação-de-dados",
    "title": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta",
    "section": "",
    "text": "#install.packages(\"MASS\")\nlibrary(MASS)\n\nWarning: pacote 'MASS' foi compilado no R versão 4.4.3\n\ninsects &lt;- InsectSprays\n\nm1 &lt;- lm(count ~spray, data = insects)\n\nlibrary(DHARMa)\n\nWarning: pacote 'DHARMa' foi compilado no R versão 4.4.3\n\n\nThis is DHARMa 0.4.7. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')\n\nplot(simulateResiduals(m1))\n\n\n\n\n\n\n\n#como não atendeu ao pressuposto de homogeneidade, testamos a transformação dos dados. \n#Inicialmente testa a transformação por raiz quadrada. \n\nm1 &lt;- lm(sqrt(count) ~ spray, data = insects)\nm1\n\n\nCall:\nlm(formula = sqrt(count) ~ spray, data = insects)\n\nCoefficients:\n(Intercept)       sprayB       sprayC       sprayD       sprayE       sprayF  \n     3.7607       0.1160      -2.5158      -1.5963      -1.9512       0.2579  \n\nlibrary(DHARMa)\nplot(simulateResiduals(m1))\n\n\n\n\n\n\n\n#Transformação por log (com +1 para evitar log(0))\nm1_log &lt;- lm(log(count + 1) ~ spray, data = insects)  # +1 para evitar log(0), caso tenha valores zero\nm1_log\n\n\nCall:\nlm(formula = log(count + 1) ~ spray, data = insects)\n\nCoefficients:\n(Intercept)       sprayB       sprayC       sprayD       sprayE       sprayF  \n     2.6967       0.0598      -1.7441      -0.9834      -1.2705       0.1189  \n\nlibrary(DHARMa)\nplot(simulateResiduals(m1_log))\n\n\n\n\n\n\n\n#raiz quadrada é 0.5 e log é 0.Quando lambda é 1 o valor é igual o original. \n#box cox é usado quando o log ou raiz não dá certo. \n#as médias tem que ser com os valores destransformados \n\nboxcox(lm(insects$count+0.1 ~ 1))\nb &lt;- boxcox(lm(insects$count+0.1 ~ 1))\n\n\n\n\n\n\n\nlambda &lt;- b$x[which.max(b$y)] # Extrair o lambda ótimo\nlambda\n\n[1] 0.4242424\n\n# Quando for apresentar as médias, deve-se usar os valores originais (sem transformação).\n# A transformação é aplicada apenas para satisfazer os pressupostos da ANOVA ou regressão.\n\nlibrary(tidyverse) \n\nWarning: pacote 'tidyverse' foi compilado no R versão 4.4.3\n\n\nWarning: pacote 'readr' foi compilado no R versão 4.4.3\n\n\nWarning: pacote 'stringr' foi compilado no R versão 4.4.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n✖ dplyr::select() masks MASS::select()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ninsects &lt;- insects |&gt; \n  mutate(count2 = (count^lambda-1)/lambda) |&gt; \n  mutate(count3 = (sqrt(count))) \nhist(insects$count2)\n\n\n\n\n\n\n\n\n\n\n\n\nlibrary(gsheet)\n\nWarning: pacote 'gsheet' foi compilado no R versão 4.4.3\n\nestande &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=401662555#gid=401662555\")\nestande\n\n\n  \n\n\n#análise visual dos dados em da emergencia de plantas em função dos inóculos \n\nlibrary(ggplot2)\nestande |&gt; \nggplot(aes(trat,nplants))+\n  geom_point(color = \"gray\")+\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\")+\n    facet_wrap(~ exp)+\n  theme_minimal()+\n  labs(x= \"% de inóculo da semente\",\n       y= \"número de plantas\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\nGerar um modelo para cada experimento\n\nexp1 &lt;- estande |&gt; \n  filter(exp == 1) |&gt;\n  group_by(trat) |&gt; \n  summarise(nplants2 = mean(nplants))\n\nexp1 |&gt; \n  ggplot(aes(trat, nplants2))+\n  geom_point()+\n  ylim(20,60)\n\n\n\n\n\n\n\nm_exp1 &lt;- lm(nplants2 ~ trat, data = exp1)\nsummary(m_exp1)\n\n\nCall:\nlm(formula = nplants2 ~ trat, data = exp1)\n\nResiduals:\n      1       2       3       4       5       6 \n 1.2500  0.7258  1.7016 -2.5968 -2.9435  1.8629 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 52.50000    1.36929  38.341 2.76e-06 ***\ntrat        -0.24194    0.06054  -3.996   0.0162 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.442 on 4 degrees of freedom\nMultiple R-squared:  0.7997,    Adjusted R-squared:  0.7496 \nF-statistic: 15.97 on 1 and 4 DF,  p-value: 0.01618\n\n# Sem summarise, mantendo 'nplants', 'trat' e 'bloco'\nexp1 &lt;- estande |&gt; \n  filter(exp == 1)\n\n# Modelo com trat e bloco\nm_exp1 &lt;- lm(nplants ~ trat + bloco, data = exp1)\nsummary(m_exp1)\n\n\nCall:\nlm(formula = nplants ~ trat + bloco, data = exp1)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-18.0769  -6.7847  -0.7817   4.0522  22.6091 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  75.5833     5.7164  13.222 1.19e-11 ***\ntrat         -0.2419     0.1323  -1.829 0.081623 .  \nbloco        -9.2333     1.9485  -4.739 0.000111 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.67 on 21 degrees of freedom\nMultiple R-squared:  0.5513,    Adjusted R-squared:  0.5086 \nF-statistic:  12.9 on 2 and 21 DF,  p-value: 0.0002216\n\nm_exp1 &lt;- lm(nplants ~ trat + bloco, data = exp1)\nsummary(m_exp1)\n\n\nCall:\nlm(formula = nplants ~ trat + bloco, data = exp1)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-18.0769  -6.7847  -0.7817   4.0522  22.6091 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  75.5833     5.7164  13.222 1.19e-11 ***\ntrat         -0.2419     0.1323  -1.829 0.081623 .  \nbloco        -9.2333     1.9485  -4.739 0.000111 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.67 on 21 degrees of freedom\nMultiple R-squared:  0.5513,    Adjusted R-squared:  0.5086 \nF-statistic:  12.9 on 2 and 21 DF,  p-value: 0.0002216\n\n#Na ausência de inóculo (intercepto), a média de plantas no estande é de 52. A cada aumento de 1% no inóculo, observa-se uma redução de 0,24 no número de plantas."
  },
  {
    "objectID": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta.html#experimento-2",
    "href": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta.html#experimento-2",
    "title": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta",
    "section": "",
    "text": "exp2 &lt;- estande |&gt; \n  filter(exp == 2)\n\nm_exp2 &lt;- lm(nplants ~ trat , data = exp2)\nsummary(m_exp2)\n\n\nCall:\nlm(formula = nplants ~ trat, data = exp2)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-25.7816  -7.7150   0.5653   8.1929  19.2184 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  60.9857     3.6304  16.798 4.93e-14 ***\ntrat         -0.7007     0.1605  -4.365 0.000247 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.95 on 22 degrees of freedom\nMultiple R-squared:  0.4641,    Adjusted R-squared:  0.4398 \nF-statistic: 19.05 on 1 and 22 DF,  p-value: 0.0002473"
  },
  {
    "objectID": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta.html#experimento-3",
    "href": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta.html#experimento-3",
    "title": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta",
    "section": "",
    "text": "exp3 &lt;- estande |&gt; \n  filter(exp == 3)\n\nm_exp3 &lt;- lm(nplants ~ trat , data = exp3)\nsummary(m_exp3)\n\n\nCall:\nlm(formula = nplants ~ trat, data = exp3)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-26.5887  -3.9597   0.7177   5.5806  19.8952 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  95.7500     2.9529  32.425  &lt; 2e-16 ***\ntrat         -0.7634     0.1306  -5.847 6.97e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.53 on 22 degrees of freedom\nMultiple R-squared:  0.6085,    Adjusted R-squared:  0.5907 \nF-statistic: 34.19 on 1 and 22 DF,  p-value: 6.968e-06\n\n#calcular o slop para o experimento\nm_exp1$coefficients \n\n(Intercept)        trat       bloco \n 75.5833333  -0.2419355  -9.2333333 \n\nm_exp2$coefficients\n\n(Intercept)        trat \n 60.9857143  -0.7006912 \n\nm_exp3$coefficients\n\n(Intercept)        trat \n 95.7500000  -0.7634409 \n\nm_exp1$coefficients\n\n(Intercept)        trat       bloco \n 75.5833333  -0.2419355  -9.2333333 \n\n(0.24 + 0.7 + 0.76)/3\n\n[1] 0.5666667"
  },
  {
    "objectID": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta.html#modelo-misto",
    "href": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta.html#modelo-misto",
    "title": "Aula_6_Transformações, Modelos Lineares e Curvas Dose-Resposta",
    "section": "",
    "text": "library(lme4)\n\nCarregando pacotes exigidos: Matrix\n\n\n\nAnexando pacote: 'Matrix'\n\n\nOs seguintes objetos são mascarados por 'package:tidyr':\n\n    expand, pack, unpack\n\nm_misto &lt;- lmer(nplants ~ trat + (1 | exp/bloco),\n                data = estande)\n#acima, o tratamento é efeito fixo, os experimentos e blocos efeitos aleatórios, e os blocos estão dentro dos experimentos.\n\nconfint(m_misto)\n\nComputing profile confidence intervals ...\n\n\n                 2.5 %     97.5 %\n.sig01       3.3332097 14.4218422\n.sig02       7.2377419 47.8269818\n.sigma       9.7314178 13.9359486\n(Intercept) 43.4631239 96.0274587\ntrat        -0.7328972 -0.4044812\n\nsummary(m_misto)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: nplants ~ trat + (1 | exp/bloco)\n   Data: estande\n\nREML criterion at convergence: 575.8\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.21697 -0.63351  0.04292  0.67094  1.92907 \n\nRandom effects:\n Groups    Name        Variance Std.Dev.\n bloco:exp (Intercept)  54.76    7.40   \n exp       (Intercept) 377.43   19.43   \n Residual              134.99   11.62   \nNumber of obs: 72, groups:  bloco:exp, 12; exp, 3\n\nFixed effects:\n            Estimate Std. Error t value\n(Intercept) 69.74524   11.57191   6.027\ntrat        -0.56869    0.08314  -6.840\n\nCorrelation of Fixed Effects:\n     (Intr)\ntrat -0.111\n\nlibrary(car)\n\nCarregando pacotes exigidos: carData\n\n\n\nAnexando pacote: 'car'\n\n\nO seguinte objeto é mascarado por 'package:dplyr':\n\n    recode\n\n\nO seguinte objeto é mascarado por 'package:purrr':\n\n    some\n\nAnova(m_misto)\n\n\n  \n\n\npredict(m_misto, data = estande)\n\nWarning in predict.merMod(m_misto, data = estande): unused arguments ignored\n\n\n       1        2        3        4        5        6        7        8 \n65.59316 64.29370 53.77994 47.28268 63.88709 62.58764 52.07388 45.57661 \n       9       10       11       12       13       14       15       16 \n62.18102 60.88157 50.36781 43.87054 58.76889 57.46943 46.95567 40.45841 \n      17       18       19       20       21       22       23       24 \n51.94462 50.64516 40.13140 33.63414 38.29608 36.99662 26.48286 19.98559 \n      25       26       27       28       29       30       31       32 \n57.58669 50.97129 63.25703 64.55649 55.88062 49.26522 61.55097 62.85042 \n      33       34       35       36       37       38       39       40 \n54.17456 47.55916 59.84490 61.14435 50.76242 44.14702 56.43276 57.73222 \n      41       42       43       44       45       46       47       48 \n43.93815 37.32275 49.60849 50.90795 30.28961 23.67421 35.95995 37.25941 \n      49       50       51       52       53       54       55       56 \n92.93706 93.40959 90.69255 92.58267 91.23100 91.70352 88.98648 90.87660 \n      57       58       59       60       61       62       63       64 \n89.52493 89.99746 87.28042 89.17053 86.11279 86.58532 83.86828 85.75840 \n      65       66       67       68       69       70       71       72 \n79.28852 79.76105 77.04401 78.93413 65.63998 66.11251 63.39547 65.28559 \n\n#P foi siguinificativo\n\nestande |&gt;\n  ggplot(aes(trat, nplants, color = factor(exp)))+\n  geom_point()+\n  #geom_smooth(method = \"lm\", se = FALSE)+\n  geom_abline(intercept = 69.74,\n              slope = -0.568, linewidth = 2)+\n  geom_abline(intercept = 43, slope = -0.73, linetype = \"dashed\")+\n  geom_abline(intercept = 96, slope = -0.40, linetype = \"dashed\")\n\n\n\n\n\n\n\n\n\n\n\nfungi &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=465348652#gid=465348652\")\n\nlibrary(dplyr)\n\n#visualizar os dados \n\nfungi |&gt;\n  group_by(code, dose) |&gt;\n  summarise(germination = mean(germination)) |&gt;\n  ggplot(aes(dose, germination))+\n  geom_point()+\n  geom_line()+\n  #geom_smooth(se = FALSE)+\n  facet_wrap(~code)\n\n`summarise()` has grouped output by 'code'. You can override using the\n`.groups` argument.\n\n\n\n\n\n\n\n\nFGT43 &lt;- fungi |&gt;\n  group_by(code, dose) |&gt;\n  summarise(germination = mean(germination)) |&gt;  \nfilter(code == \"FGT43\")\n\n`summarise()` has grouped output by 'code'. You can override using the\n`.groups` argument.\n\n#filtrar para o conjunto de médias de FGT43\n\n#install.packages(\"drc\"), ajustar o modelo não linear aos dados \n\nlibrary(drc)\n\nWarning: pacote 'drc' foi compilado no R versão 4.4.3\n\n\n\n'drc' has been loaded.\n\nPlease cite R and 'drc' if used for a publication,\nfor references type 'citation()' and 'citation('drc')'.\n\n\nAnexando pacote: 'drc'\n\nOs seguintes objetos são mascarados por 'package:stats':\n\n    gaussian, getInitial\n\nm43 &lt;- drm(germination ~ dose,\n           data = FGT43,\n           fct = W2.3())\n  \nm43 &lt;- drm(germination ~dose,\n           data = FGT43, \n           fct = LL.3()) #começar a testar com o modelo LL.3 \n\nsummary(m43)\n\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  1.219692   0.175081  6.9664  0.006069 ** \nd:(Intercept) 48.486911   1.456007 33.3013 5.952e-05 ***\ne:(Intercept)  0.495895   0.060851  8.1494  0.003864 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 1.636105 (3 degrees of freedom)\n\nAIC(m43) #quanto &lt; o AIC, melhor. \n\n[1] 26.7762\n\nplot(m43)\n\n\n\n\n\n\n\nED(m43, 50)\n\n\nEstimated effective doses\n\n       Estimate Std. Error\ne:1:50 0.495895   0.060851\n\n#Estima a EC50.\n\n#testar para cada isolado, qual modelo fica melhor.\n\n#install.packages(\"ec50estimator\")\nlibrary(ec50estimator)\n\nWarning: pacote 'ec50estimator' foi compilado no R versão 4.4.3\n\ndf_ec50 = estimate_EC50(germination ~ dose,\n                        data =fungi,\n                        isolate_col = \"code\",\n                        strata_col =  c(\"state\"),\n                        interval = \"delta\",\n                        fct = drc::LL.3())\nhead(df_ec50)\n\n\n  \n\n\nlibrary(ggplot2)\ndf_ec50 |&gt;\n  ggplot(aes(reorder(ID, Estimate), Estimate))+ \n  geom_point()+\n  coord_flip()+\n  labs(y = \"EC50\",\n       x = \"Isolado\")\n\n\n\n\n\n\n\ndf_ec50 |&gt;\n  ggplot(aes(x = Estimate))+\n  geom_histogram(bins = 5, color = \"white\")"
  },
  {
    "objectID": "Aula_4_ANOVA_fatorial.html",
    "href": "Aula_4_ANOVA_fatorial.html",
    "title": "Aula_4_ANOVA_fatorial",
    "section": "",
    "text": "Dando continuidade a aula anterior, sobre testes estatisticos, esta aula foi voltada para a Analise de variancia (ANOVA) de dois fatores (ou bidirecional). Esta ANOVA testa se há uma diferença entre mais de duas amostras independentes divididas entre duas variáveis ou fatores.\n\n\nCode\n#Neste exemplo, vamos testar se a resposta depende do tratamento e da dose. Lembrando que este conjunto de dados pertence a planilha dados diversos disponibilizada em aula pelo professor.  \n\nlibrary(gsheet)\n\nfungicida_vaso &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=2023059672#gid=2023059672\")\nfungicida_vaso\n\n\n\n  \n\n\n\nCode\n#Plotar o gráfico para análise visual dos dados \nlibrary(ggplot2)\nfungicida_vaso |&gt; \n  ggplot(aes(factor(dose), severity*100))+ #usamos factor para transformar dose em fator\n  geom_jitter(width = 0.1)+\n  facet_wrap(~treat)\n\n\n\n\n\n\n\n\n\nCode\n#Testar se o efeito do tratamento depende da dose.\n  m_anti &lt;- lm(severity ~ treat*dose, data = fungicida_vaso)\nanova(m_anti)\n\n\n\n  \n\n\n\nCode\n#como deu siguinificativo as interações entre dose e tratamento, decompoe as médias dentro de cada tratamento e dose (trat x dose). Desconsidera os efeitos simples e foca na interação. \n#testar se o modelo esta atende aos pressupostos de normalidade e homogeneidade, usando o DHARMa\n\nlibrary(DHARMa)\nplot(simulateResiduals(m_anti))\n\n\n\n\n\n\n\n\n\nCode\n#como não há problemas, pode seguir com o teste de comparação de médias \n#comando para decompor as médias dos tratamentos dentro das doses.\nlibrary(emmeans)\nmedia_anti &lt;- emmeans(m_anti, ~ treat |dose)\nmedia_anti #mostra as médias (no artigo, apresentar em tabela)\n\n\ndose = 0.5:\n treat        emmean     SE df lower.CL upper.CL\n Ionic liquid 0.2921 0.0273 16  0.23420   0.3500\n Tebuconazole 0.0210 0.0273 16 -0.03690   0.0789\n\ndose = 2.0:\n treat        emmean     SE df lower.CL upper.CL\n Ionic liquid 0.0501 0.0273 16 -0.00781   0.1080\n Tebuconazole 0.0202 0.0273 16 -0.03768   0.0781\n\nConfidence level used: 0.95 \n\n\nCode\nlibrary(multcomp)\ncld(media_anti) #mostrar as diferenças estatísticas para letras das colunas (maiusculas). \n\n\n\n  \n\n\n\nCode\n#decompões as médias de cada dose dentro dos tratamentos.\n#mostrar as diferenças estatísticas para letras na linha (minusculas). \nmedia_anti &lt;- emmeans(m_anti, ~ dose |treat)\nmedia_anti\n\n\ntreat = Ionic liquid:\n dose emmean     SE df lower.CL upper.CL\n  0.5 0.2921 0.0273 16  0.23420   0.3500\n  2.0 0.0501 0.0273 16 -0.00781   0.1080\n\ntreat = Tebuconazole:\n dose emmean     SE df lower.CL upper.CL\n  0.5 0.0210 0.0273 16 -0.03690   0.0789\n  2.0 0.0202 0.0273 16 -0.03768   0.0781\n\nConfidence level used: 0.95 \n\n\nCode\ncld(media_anti)\n\n\n\n  \n\n\n\nCode\n#para o CV (coeficiente de variação do modelo) da tabela \nlibrary(agricolae)\ncv.model(m_anti)\n\n\n[1] 63.7165\n\n\nCode\n#caso não tivesse inyteração, se fosse não siguinificativo, observar os efeitos simples \np1 &lt;- fungicida_vaso |&gt; \n  ggplot(aes(factor(dose),severity*100))+\n  geom_jitter(width =0.1)\np1\n\n\n\n\n\n\n\n\n\nCode\np2 &lt;- fungicida_vaso |&gt; \n  ggplot(aes(factor(treat),severity*100))+\n  geom_jitter(width =0.1)\np2 \n\n\n\n\n\n\n\n\n\nCode\n#Unindo os dois gráficos para comparação\nlibrary(patchwork)\np1+p2\n\n\n\n\n\n\n\n\n\nCode\n#função auxiliar para visualizar se a interação é siguinificativa ou não\ninteraction.plot(fungicida_vaso$treat, fungicida_vaso$dose, fungicida_vaso$severity, data = fungicida_vaso)\n\n\n\n\n\n\n\n\n\nCode\n#quando as linhas não são paralelas quer dizer que a interação é siguinificativa e quando são paralelas, interação não siguinificativa \n\n\n\nTabela 1 - Resultado do teste de comparação de médias\n\n\npara inserir tabelas em seu script, basta ir no botão “insert”, depois “Table”. Ou utilizar o atalho “ctrl+Alt+t”.\n\n\nTrat\n0.5\n2.0\n\n\n\n\nLi\n29.2 Aa\n5 Ab\n\n\nTEBU\n2.1 Ba\n2 Aa\n\n\nCV = 63%"
  },
  {
    "objectID": "Aula_4_ANOVA_fatorial.html#anova-de-dois-fatores",
    "href": "Aula_4_ANOVA_fatorial.html#anova-de-dois-fatores",
    "title": "Aula_4_ANOVA_fatorial",
    "section": "",
    "text": "Dando continuidade a aula anterior, sobre testes estatisticos, esta aula foi voltada para a Analise de variancia (ANOVA) de dois fatores (ou bidirecional). Esta ANOVA testa se há uma diferença entre mais de duas amostras independentes divididas entre duas variáveis ou fatores.\n\n\nCode\n#Neste exemplo, vamos testar se a resposta depende do tratamento e da dose. Lembrando que este conjunto de dados pertence a planilha dados diversos disponibilizada em aula pelo professor.  \n\nlibrary(gsheet)\n\nfungicida_vaso &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=2023059672#gid=2023059672\")\nfungicida_vaso\n\n\n\n  \n\n\n\nCode\n#Plotar o gráfico para análise visual dos dados \nlibrary(ggplot2)\nfungicida_vaso |&gt; \n  ggplot(aes(factor(dose), severity*100))+ #usamos factor para transformar dose em fator\n  geom_jitter(width = 0.1)+\n  facet_wrap(~treat)\n\n\n\n\n\n\n\n\n\nCode\n#Testar se o efeito do tratamento depende da dose.\n  m_anti &lt;- lm(severity ~ treat*dose, data = fungicida_vaso)\nanova(m_anti)\n\n\n\n  \n\n\n\nCode\n#como deu siguinificativo as interações entre dose e tratamento, decompoe as médias dentro de cada tratamento e dose (trat x dose). Desconsidera os efeitos simples e foca na interação. \n#testar se o modelo esta atende aos pressupostos de normalidade e homogeneidade, usando o DHARMa\n\nlibrary(DHARMa)\nplot(simulateResiduals(m_anti))\n\n\n\n\n\n\n\n\n\nCode\n#como não há problemas, pode seguir com o teste de comparação de médias \n#comando para decompor as médias dos tratamentos dentro das doses.\nlibrary(emmeans)\nmedia_anti &lt;- emmeans(m_anti, ~ treat |dose)\nmedia_anti #mostra as médias (no artigo, apresentar em tabela)\n\n\ndose = 0.5:\n treat        emmean     SE df lower.CL upper.CL\n Ionic liquid 0.2921 0.0273 16  0.23420   0.3500\n Tebuconazole 0.0210 0.0273 16 -0.03690   0.0789\n\ndose = 2.0:\n treat        emmean     SE df lower.CL upper.CL\n Ionic liquid 0.0501 0.0273 16 -0.00781   0.1080\n Tebuconazole 0.0202 0.0273 16 -0.03768   0.0781\n\nConfidence level used: 0.95 \n\n\nCode\nlibrary(multcomp)\ncld(media_anti) #mostrar as diferenças estatísticas para letras das colunas (maiusculas). \n\n\n\n  \n\n\n\nCode\n#decompões as médias de cada dose dentro dos tratamentos.\n#mostrar as diferenças estatísticas para letras na linha (minusculas). \nmedia_anti &lt;- emmeans(m_anti, ~ dose |treat)\nmedia_anti\n\n\ntreat = Ionic liquid:\n dose emmean     SE df lower.CL upper.CL\n  0.5 0.2921 0.0273 16  0.23420   0.3500\n  2.0 0.0501 0.0273 16 -0.00781   0.1080\n\ntreat = Tebuconazole:\n dose emmean     SE df lower.CL upper.CL\n  0.5 0.0210 0.0273 16 -0.03690   0.0789\n  2.0 0.0202 0.0273 16 -0.03768   0.0781\n\nConfidence level used: 0.95 \n\n\nCode\ncld(media_anti)\n\n\n\n  \n\n\n\nCode\n#para o CV (coeficiente de variação do modelo) da tabela \nlibrary(agricolae)\ncv.model(m_anti)\n\n\n[1] 63.7165\n\n\nCode\n#caso não tivesse inyteração, se fosse não siguinificativo, observar os efeitos simples \np1 &lt;- fungicida_vaso |&gt; \n  ggplot(aes(factor(dose),severity*100))+\n  geom_jitter(width =0.1)\np1\n\n\n\n\n\n\n\n\n\nCode\np2 &lt;- fungicida_vaso |&gt; \n  ggplot(aes(factor(treat),severity*100))+\n  geom_jitter(width =0.1)\np2 \n\n\n\n\n\n\n\n\n\nCode\n#Unindo os dois gráficos para comparação\nlibrary(patchwork)\np1+p2\n\n\n\n\n\n\n\n\n\nCode\n#função auxiliar para visualizar se a interação é siguinificativa ou não\ninteraction.plot(fungicida_vaso$treat, fungicida_vaso$dose, fungicida_vaso$severity, data = fungicida_vaso)\n\n\n\n\n\n\n\n\n\nCode\n#quando as linhas não são paralelas quer dizer que a interação é siguinificativa e quando são paralelas, interação não siguinificativa \n\n\n\nTabela 1 - Resultado do teste de comparação de médias\n\n\npara inserir tabelas em seu script, basta ir no botão “insert”, depois “Table”. Ou utilizar o atalho “ctrl+Alt+t”.\n\n\nTrat\n0.5\n2.0\n\n\n\n\nLi\n29.2 Aa\n5 Ab\n\n\nTEBU\n2.1 Ba\n2 Aa\n\n\nCV = 63%"
  },
  {
    "objectID": "Aula_2_Ler_dados_de_arquivos.html#carregando-conjuntos-de-dados",
    "href": "Aula_2_Ler_dados_de_arquivos.html#carregando-conjuntos-de-dados",
    "title": "Aula_2_Ler_dados_de_arquivos",
    "section": "Carregando conjuntos de dados",
    "text": "Carregando conjuntos de dados\n\nImportar dados _ dados em pacotes\nComo vimos na aula anterior, o R studio conta com pacotes que possuem diferentes finalidades, alguns deles são pacotes de dados, como o “agridat”, no exemplo abaixo.\nPodemos explorar estes pacotes com dados reais/simulados para testar modelos ou rodar análises para treinar mais o aprendizado no R.\n\n\nCode\nlibrary(agridat)\ndata(durban.competition) \nlibrary(agricolae)\ndata(sweetpotato)\n\n\n\n\nImportar dados _ Arquivos excel\nOutra maneira de trabalhar é com dados tabelados em excel.\n\n\nCode\n#carregar os pacotes necessários aos comandos para ler as planilhas \n#install.packages(\"readxl\")\nlibrary(readxl) #Pacote para ler planilhas do excel\nlibrary(dplyr)\n\ndados &lt;- read_excel(\"dados-diversos.xlsx\", sheet = \"sensibilidade_fungicidas\")\ndados\n\n\n\n  \n\n\n\nCode\nstr(dados)\n\n\ntibble [240 × 7] (S3: tbl_df/tbl/data.frame)\n $ code       : chr [1:240] \"FGT05\" \"FGT05\" \"FGT05\" \"FGT05\" ...\n $ year       : num [1:240] 2007 2007 2007 2007 2007 ...\n $ trial      : num [1:240] 1 1 1 1 1 1 1 1 1 1 ...\n $ state      : chr [1:240] \"RS\" \"RS\" \"RS\" \"RS\" ...\n $ dose       : chr [1:240] \"0\" \"0\" \"0.05\" \"0.05\" ...\n $ replicate  : num [1:240] 1 2 1 2 1 2 1 2 1 2 ...\n $ germination: num [1:240] 46 44 18 24 9 11 0 0 0 0 ...\n\n\nCode\nglimpse(dados) \n\n\nRows: 240\nColumns: 7\n$ code        &lt;chr&gt; \"FGT05\", \"FGT05\", \"FGT05\", \"FGT05\", \"FGT05\", \"FGT05\", \"FGT…\n$ year        &lt;dbl&gt; 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n$ trial       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ state       &lt;chr&gt; \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\", \"RS\"…\n$ dose        &lt;chr&gt; \"0\", \"0\", \"0.05\", \"0.05\", \"0.5\", \"0.5\", \"1\", \"1\", \"5\", \"5\"…\n$ replicate   &lt;dbl&gt; 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2…\n$ germination &lt;dbl&gt; 46, 44, 18, 24, 9, 11, 0, 0, 0, 0, 0, 0, 50, 50, 43, 44, 2…\n\n\nCode\n#A função glimpse dá uma visão rápida do objeto, mostrando o tipo de cada coluna (ex: número, texto, data), o nome das variáveis, e alguns valores de cada variável.\n\ndados2 &lt;- dados |&gt; \n  mutate(dose = as.numeric(dose)) \n#A coluna dados era caractere, aqui usamos a função \"mutate\" para converter a variável \"dose\" em valores numéricos\ndados2\n\n\n\n  \n\n\n\n\n\nImportar dados _ dados em .csv\n\n\nCode\n#Para transformar o arquivo .xlsx (excel) em .csv\nlibrary(readxl)    # para ler .xlsx\n# Ler o arquivo .xlsx\ndadoscsv &lt;- read_excel(\"dados-diversos.xlsx\")\n# Escrever como .csv\nwrite.csv(dados, \"dados-diversos_convertido.csv\", row.names = FALSE)\n\n# Carrega o pacote\nlibrary(readr)\n# Ler um arquivo CSV\ndados_csv &lt;- read_csv(\"dados-diversos_convertido.csv\")\n# Ver os dados\nhead(dados_csv)\n\n\n\n  \n\n\n\nCode\ndados_csv\n\n\n\n  \n\n\n\nCode\nView(dados_csv)\n\n#Usamos o pacote \"writexl\" para salvar o arquivo .csv em .xlsx (excel)\nlibrary(writexl) \nwrite_xlsx(dados_csv, \"dados_csv_convertido.xlsx\")\n\n\n#Para transformar o arquivo .csv em .xlsx (excel)\nlibrary(readr)    # para ler arquivos .csv\nlibrary(writexl)  # para salvar arquivos .xlsx\n# Ler o arquivo .csv\ndados_csv &lt;- read_csv(\"dados-diversos_convertido.csv\")\n# Escrever como .xlsx\nwrite_xlsx(dados_csv, \"dados_convertido.xlsx\")\n\n#para salvar como xl ou csv de dentro do R, cria um novo arquivo \nlibrary(writexl)\nwrite_xlsx(dados2, \"dados_convertido.xlsx\")\nwrite_csv(dados_csv, \"dados-diversos_convertido.csv\")\n\n\n\n\nImportar dados _ dados da Nuvem\nPodemos trabalhar também com dados diretamente da núvem, sem a necessidade de fazer o download para o seu dispositivo.\nAbaixo salvamos como objetos, tres abas diferentes de uma mesma planilha online. Para isso, basta ativar o pacote “gsheet”, nomear o seu objeto e chamar a função gsheet2tbl, colocando o link da aba google entre parenteses e aspas.\n\n\nCode\n#install.packages(\"gsheet\")\nlibrary(gsheet)\n#para importar da nuvem\ndados_nuvem &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit\")\n\ndados_mg &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1807247585#gid=1807247585\")\n\nsurvey &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1118819738#gid=1118819738\")\n \n#para contar as variáveis\nsurvey |&gt;\n  group_by(state) |&gt; \n  count()\n\n\n\n  \n\n\n\nCode\n#para contar espécies\nsurvey |&gt;\n  group_by(species) |&gt; \n  count()\n\n\n\n  \n\n\n\nCode\n#para contar os resíduos \nsurvey |&gt;\n  group_by(residue) |&gt; \n  count()\n\n\n\n  \n\n\n\nCode\n#juntar dois calculos \nsurvey |&gt;\n  group_by(state, residue) |&gt; \n  count()\n\n\n\n  \n\n\n\nCode\n#para separar apenas os dados que desejar,\"filter\" é usado para linhas, enquanto \"select\" é usado para colunas\nRS &lt;- survey |&gt;\n  filter(state == \"RS\")\n\nPR &lt;- survey |&gt; \n  filter(state == \"PR\")\n\n#passo inverso do anterior, agora unir ou selecionar apenas o que desejar \ncombinado &lt;- rbind(RS, PR)\n\n#para selecionar apenas as colunas desejadas e já deixar em conjunto \nsurvey_b &lt;- survey |&gt; \n  dplyr::select(year, state, species)\n\n#separar apenas 2009\nsurvey_2009 &lt;- survey |&gt; \n  dplyr::select(year, state, species) |&gt; \n  filter(year == 2009)\n\nsurvey_2011 &lt;- survey |&gt; \n  dplyr::select(year, state, species) |&gt; \n  filter(year == 2011)"
  },
  {
    "objectID": "Aula_1_Introdução_ao_R_Studio.html#começando-com-um-teste-inicial",
    "href": "Aula_1_Introdução_ao_R_Studio.html#começando-com-um-teste-inicial",
    "title": "aula_1_Introdução_ao_R_studio",
    "section": "Começando com um teste inicial",
    "text": "Começando com um teste inicial\nNeste chunk temos um exemplo de como criar objetos onde serão atribuidos valores.\nPara criar objetos, inicialmente criamos um nome para o objeto, seguido dos simbolos “&lt;-”, que é um sinal de atribuição. No exemplo abaixo criamos o objeto “a”, onde a recebeu o valor 1.\n\n\nCode\na &lt;- 1 \na \n\n\n[1] 1\n\n\nCode\nb &lt;- 2\nb\n\n\n[1] 2\n\n\nCode\nc &lt;- a+b\nc\n\n\n[1] 3\n\n\n\nAlém de códigos, também podemos escrever testos no seu documento, aqui vão alguns comandos extras para edição de textos no seu documento:\num * deixa em itálico ou (Ctrl+i); para negrito (Ctrl+b); para inserir link (Ctrl+k); para inserir novo chunk (Ctrl+alt+i); usar “” para sinalizar que é texto e não uma função.\nPara explicar mais funções iniciais, vamos importar um conjunto de dados do próprio R."
  },
  {
    "objectID": "Aula_1_Introdução_ao_R_Studio.html#importando-um-conjunto-de-dados",
    "href": "Aula_1_Introdução_ao_R_Studio.html#importando-um-conjunto-de-dados",
    "title": "aula_1_Introdução_ao_R_studio",
    "section": "Importando um conjunto de dados",
    "text": "Importando um conjunto de dados\nNo exemplo abaixo vamos criar o objeto “dados” e usando a função que vimso acima, vamos atibuir a ele o conjunto de dados Oranje, que são dados agrupados de um conjunto de dados do R.\n\n\nCode\nOrange\n\n\n\n  \n\n\n\nCode\ndados &lt;- Orange\ndados\n\n\n\n  \n\n\n\nAos objetos ou data frames (conjunto de dados), podemos aplicar funções, para executar ações. Como é o exemplo da função plot(). Esta função é básica do R e serve para plotar gráficos que permitem visualizar os dados de forma gráfica para uma análise visual rápida. Lembre-se que, não basta chamar a função, o seu objeto/data frame deve estar dentro de “()” para que a função seja executada.\n\n\nCode\nplot(dados)\n\n\n\n\n\n\n\n\n\nMas para visualizar os dados de maneira correta é importante saber o que voce precisa/quer visualizar. Ao chamar “dados” podemos observar que o data frame é composto por 3 colunas: Tree, age, circunference. Podemos então utilizar outras funções para nos auxiliar.\n\n\nCode\nplot(dados$circumference) \n\n\n\n\n\n\n\n\n\nCode\nplot(dados$Tree) \n\n\n\n\n\n\n\n\n\nCode\nplot(dados$age)\n\n\n\n\n\n\n\n\n\nAcima utilizamos o sinal “$”, utilizado para isolar um vetor de dados específico do data frame.\nPodemos criar um novo objeto e atribuir a ele o vetor de dados isolado.\nOu, podemos utilizar a função “attach” para desagregar o data frame e criar vetores independentes.\nBônus: a função “detach” é o oposto da função anterior.\n\n\nCode\ncirc &lt;- dados$circumference \ncirc \n\n\n [1]  30  58  87 115 120 142 145  33  69 111 156 172 203 203  30  51  75 108 115\n[20] 139 140  32  62 112 167 179 209 214  30  49  81 125 142 174 177\n\n\nCode\n#ou \nattach(dados) \ncircumference \n\n\n [1]  30  58  87 115 120 142 145  33  69 111 156 172 203 203  30  51  75 108 115\n[20] 139 140  32  62 112 167 179 209 214  30  49  81 125 142 174 177"
  },
  {
    "objectID": "Aula_3_Testes_estatisticos.html#testes-para-amostras-independentes",
    "href": "Aula_3_Testes_estatisticos.html#testes-para-amostras-independentes",
    "title": "Aula_3_Testes_estatisticos",
    "section": "Testes para amostras independentes",
    "text": "Testes para amostras independentes\n\n\nCode\n#Dica: para procurar de que pacote a função vem, pesquisa na internet o nome da função, seguido de in r.\n#ativa os pacotes necessários \nlibrary(gsheet)\nlibrary(ggplot2)\nlibrary(stats)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(report)\nlibrary(rstatix)\nlibrary(ggpubr)\nlibrary(multcomp)\n#install_packages(\"see\")\n\n#cria o objeto com os dados que serão utilizados. Esses dados são da planilha dados-diversos, disponibilizada pelo professor. \n\ndat_mg &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n\n#faz primeiro o plot para analizar vsualmente os dados \ndat_mg |&gt; \n  ggplot(aes(trat, comp))+\n  geom_jitter(width = 0.1)\n\n\n\n\n\n\n\n\n\n\nTestes para saber se há diferença estatistica\n\nTeste T para amostras independentes\n\n\nCode\n?t.test \n#usando o caractere \"?\" seguido do nome da função, serve para mostrar como o comendo funciona, lhe dá mais informações sobre pacotes e funções. \n\n#transformar a planilha do formato longo para o formato largo  \ndat_mg2 &lt;- dat_mg |&gt;\n  pivot_wider(names_from = trat, values_from= comp)|&gt;\n  dplyr::select(-rep)\n\nattach(dat_mg2)\nt.test(Mg2, control) #Teste T, que compara os tratamentos.\n\n\n\n    Welch Two Sample t-test\n\ndata:  Mg2 and control\nt = -8.1549, df = 17.354, p-value = 2.423e-07\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -6.490393 -3.825607\nsample estimates:\nmean of x mean of y \n   10.520    15.678 \n\n\nCode\nsaída_t_teste &lt;- t.test(Mg2, control) #cria um objeto para receber o resultado do teste T\n\n#invertendo as variáveis \nt.test(control, Mg2)\n\n\n\n    Welch Two Sample t-test\n\ndata:  control and Mg2\nt = 8.1549, df = 17.354, p-value = 2.423e-07\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 3.825607 6.490393\nsample estimates:\nmean of x mean of y \n   15.678    10.520 \n\n\nCode\nsaída_teste_T &lt;- t.test(control, Mg2) #cria um objeto para receber o resultado do teste T\n\n#aplica a função report para gerar texto de interpretação dde saída dos resultados, neste caso para o teste T \nlibrary(report)\nreport(saída_teste_T)\n\n\nEffect sizes were labelled following Cohen's (1988) recommendations.\n\nThe Welch Two Sample t-test testing the difference between control and Mg2\n(mean of x = 15.68, mean of y = 10.52) suggests that the effect is positive,\nstatistically significant, and large (difference = 5.16, 95% CI [3.83, 6.49],\nt(17.35) = 8.15, p &lt; .001; Cohen's d = 3.65, 95% CI [2.14, 5.12])\n\n\nCode\n#função para quando a tabela está no formato longo e não no largo, sem necessidade de transformação dos dados na tabela \nlibrary(rstatix)\nt_test(comp ~ trat, data = dat_mg)\n\n\n\n  \n\n\n\nCode\ntest_t &lt;- t_test(comp ~ trat, data = dat_mg)\ntest_t\n\n\n\n  \n\n\n\nCode\n#Plotando o resultado do teste T e adicionando o valor de P manualmente \n#install.packages(\"ggpubr\")\nlibrary(ggpubr)\n\np &lt;- ggboxplot(\n  dat_mg, x = \"trat\", y = \"comp\", \n  color = \"trat\", palette = \"jco\")\n\nprint(p) #comando para mostrar o gráfico plotado, caso não apareça \n\n\n\n\n\n\n\n\n\nCode\n#adiciona o valor de P manulamente \n\np + stat_pvalue_manual(test_t, label = \"p\",\n  y.position = 18)+\n    ylim(0,20)+\n  labs(x = \"Tratamento\",\n       y = \"Comprimento (mm)\")\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"plot2.png\", bg = \"white\" ) #comando para salvar o gráfico \n\n\n\n\nTeste de normalidade\n\n\nCode\n#testando a normalidade dos dados acima \nshapiro.test(Mg2)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  Mg2\nW = 0.97269, p-value = 0.9146\n\n\nCode\nshapiro.test(control)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  control\nW = 0.93886, p-value = 0.5404\n\n\nCode\nhist(Mg2)\n\n\n\n\n\n\n\n\n\nCode\nhist(control)\n\n\n\n\n\n\n\n\n\nCode\n# análise de variancia para validar o teste T, variancia e homogeneidade\nvar.test(dat_mg2$Mg2,\n         dat_mg2$control)\n\n\n\n    F test to compare two variances\n\ndata:  dat_mg2$Mg2 and dat_mg2$control\nF = 1.4781, num df = 9, denom df = 9, p-value = 0.5698\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.3671417 5.9508644\nsample estimates:\nratio of variances \n          1.478111 \n\n\nCode\n#ajuste no teste T caso as variancias não sejam homogeneas \nt.test(control, Mg2, var.equal = FALSE)\n\n\n\n    Welch Two Sample t-test\n\ndata:  control and Mg2\nt = 8.1549, df = 17.354, p-value = 2.423e-07\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 3.825607 6.490393\nsample estimates:\nmean of x mean of y \n   15.678    10.520 \n\n\n\n\n\nTeste T para amostras dependentes\n\n\nCode\nlibrary(gsheet)\nescala &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1729131173#gid=1729131173\")\nescala\n\n\n\n  \n\n\n\nCode\nt_test(acuracia ~ assessment, \n       data = escala,\n       paired = TRUE,\n       var.equal = FALSE)\n\n\n\n  \n\n\n\nCode\nt_test\n\n\nfunction (data, formula, comparisons = NULL, ref.group = NULL, \n    p.adjust.method = \"holm\", paired = FALSE, var.equal = FALSE, \n    alternative = \"two.sided\", mu = 0, conf.level = 0.95, detailed = FALSE) \n{\n    env &lt;- as.list(environment())\n    args &lt;- env %&gt;% .add_item(method = \"t_test\")\n    params &lt;- env %&gt;% remove_null_items() %&gt;% add_item(method = \"t.test\")\n    outcome &lt;- get_formula_left_hand_side(formula)\n    group &lt;- get_formula_right_hand_side(formula)\n    number.of.groups &lt;- guess_number_of_groups(data, group)\n    if (number.of.groups &gt; 2 & !is.null(ref.group)) {\n        if (ref.group %in% c(\"all\", \".all.\")) {\n            params$data &lt;- create_data_with_all_ref_group(data, \n                outcome, group)\n            params$ref.group &lt;- \"all\"\n        }\n    }\n    test.func &lt;- two_sample_test\n    if (number.of.groups &gt; 2) \n        test.func &lt;- pairwise_two_sample_test\n    do.call(test.func, params) %&gt;% set_attrs(args = args) %&gt;% \n        add_class(c(\"rstatix_test\", \"t_test\"))\n}\n&lt;bytecode: 0x000001f67e971bd8&gt;\n&lt;environment: namespace:rstatix&gt;\n\n\nCode\n#plotando o gráfico para análise visual\nlibrary(ggplot2)\n\nescala |&gt; \n  ggplot(aes(assessment, acuracia))+\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nCode\nunaided &lt;- escala |&gt; \n  dplyr::filter(assessment == \"Unaided\") |&gt; \n  dplyr::select(acuracia) |&gt; \n  dplyr::pull()\n\nunaided \n\n\n [1] 0.81 0.72 0.40 0.82 0.75 0.45 0.81 0.78 0.78 0.50\n\n\nCode\naided &lt;- escala |&gt; \n  dplyr::filter(assessment == \"Aided1\") |&gt; \n  dplyr::select(acuracia) |&gt; \n  dplyr::pull() \n\naided\n\n\n [1] 0.91 0.91 0.91 0.96 0.96 0.90 0.85 0.88 0.95 0.94\n\n\nCode\n#faz um teste de variancia \n  var.test(unaided, aided)\n\n\n\n    F test to compare two variances\n\ndata:  unaided and aided\nF = 20.978, num df = 9, denom df = 9, p-value = 0.000106\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n  5.210754 84.459185\nsample estimates:\nratio of variances \n          20.97847 \n\n\nCode\n  hist(unaided)\n\n\n\n\n\n\n\n\n\nCode\n  hist(aided)\n\n\n\n\n\n\n\n\n\nCode\n  shapiro.test(unaided)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  unaided\nW = 0.7748, p-value = 0.007155\n\n\nCode\n  shapiro.test(aided) \n\n\n\n    Shapiro-Wilk normality test\n\ndata:  aided\nW = 0.92852, p-value = 0.4335\n\n\nCode\n  #como a variancia foi heterogenea, faz o seguinte ajuste no teste\n  t.test(unaided, aided, paired = TRUE, \n         var.equal = FALSE)\n\n\n\n    Paired t-test\n\ndata:  unaided and aided\nt = -4.4214, df = 9, p-value = 0.001668\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n -0.3552353 -0.1147647\nsample estimates:\nmean difference \n         -0.235 \n\n\nCode\n  #teste de Wilcoxon se apresenta como uma alterativa ao teste t pareado, ou seja, quando o objetivo também é verificar se existe diferença significativa de uma variável numérica entre dois grupos de interesse.\n  wilcox.test(unaided, aided)\n\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  unaided and aided\nW = 0, p-value = 0.0001756\nalternative hypothesis: true location shift is not equal to 0\n\n\nCode\n  #teste equivalente Mann-Whitney é o teste não paramétrico equivalente ao teste t para amostras independentes\n  wilcox.test(unaided, aided, paired = FALSE)\n\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  unaided and aided\nW = 0, p-value = 0.0001756\nalternative hypothesis: true location shift is not equal to 0\n\n\nCode\n  #paired = false o transforma num mann-whitney \n\n\n\n\nTestes para 3 ou mais niveis de fator (3 ou mais tratamentos)\n\n\nCode\n  micelial &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=959387827#gid=959387827\")\n  \n  #Análise visual \n  \n  micelial |&gt; \n    ggplot(aes(especie, tcm))+\n    geom_boxplot(outlier.colour = NA)+\n    geom_jitter(width = 0.1)\n\n\n\n\n\n\n\n\n\nCode\n  #Anova \n  anova1 &lt;- aov(tcm ~ especie, data = micelial)\n  anova1 \n\n\nCall:\n   aov(formula = tcm ~ especie, data = micelial)\n\nTerms:\n                  especie Residuals\nSum of Squares  1.4695800 0.4679167\nDeg. of Freedom         4        25\n\nResidual standard error: 0.1368089\nEstimated effects may be unbalanced\n\n\nCode\n  anova(anova1)\n\n\n\n  \n\n\n\nCode\n  #outra forma de fazer a ANOVA\n  anova2 &lt;- lm(tcm ~ especie, data = micelial)\n    anova(anova2)\n\n\n\n  \n\n\n\nCode\n    #residuo é a diferença entre o estimado pelo modelo e o observado \n    #será que os resíduos são normais? \n    residuals(anova1) #resíduos da anova\n\n\n          1           2           3           4           5           6 \n-0.07166667  0.01833333 -0.05166667 -0.05166667  0.02833333  0.12833333 \n          7           8           9          10          11          12 \n 0.28333333  0.01333333  0.03333333  0.06333333 -0.15666667 -0.23666667 \n         13          14          15          16          17          18 \n-0.10166667 -0.08166667 -0.12166667  0.06833333  0.10833333  0.12833333 \n         19          20          21          22          23          24 \n-0.03166667  0.06833333 -0.20166667  0.08833333 -0.01166667  0.08833333 \n         25          26          27          28          29          30 \n 0.12333333  0.19333333  0.14333333 -0.11666667 -0.14666667 -0.19666667 \n\n\nCode\nhist(residuals(anova1))\n\n\n\n\n\n\n\n\n\nCode\nshapiro.test(residuals(anova1)) #testa a normalidade dos resíduos\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(anova1)\nW = 0.9821, p-value = 0.8782\n\n\nCode\n    #teste para variancias de modelo \n\n    #teste bartlett testa se as variancias são homogeneas\n\n    bartlett.test(tcm ~ especie, data = micelial)\n\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  tcm by especie\nBartlett's K-squared = 4.4367, df = 4, p-value = 0.3501\n\n\nCode\n    #teste de levene tem o mesmo propósito (menos sensível a desvios de normalidade\n    levene_test(tcm ~especie, data = micelial)\n\n\n\n  \n\n\n\nCode\n  #Use Levene quando os dados não forem normalmente distribuídos.\n#Use Bartlett quando os dados forem normalmente distribuídos.\n#Se ambos os testes indicarem que as variâncias são iguais, você pode seguir com a ANOVA.\n    \n  library(emmeans)\n    #pacote para calcular as médias do modelo e intervalo de confiança. Realiza contrastes e estimativas de médias após a modelagem estatística\n      m &lt;- emmeans(anova2, ~ especie)\n  m \n\n\n especie emmean     SE df lower.CL upper.CL\n Fasi     1.572 0.0559 25    1.457     1.69\n Faus     1.237 0.0559 25    1.122     1.35\n Fcor     1.322 0.0559 25    1.207     1.44\n Fgra     0.912 0.0559 25    0.797     1.03\n Fmer     1.427 0.0559 25    1.312     1.54\n\nConfidence level used: 0.95 \n\n\nCode\n  #emmeans nos deu a média por espécies, então usa o multicomp para comparar e visualizar as diferenças entre elas  \n  #install.packages(\"multcomp\")\n  #install.packages(\"multcompView\")\n  library(multcomp)\n  library(multcompView)\n  #o pacote multcom realiza comparações múltiplas (post hoc) após modelos lineares, modelos lineares generalizados, e outros tipos de modelos\n  \n  cld(m) #mostra letras compactas, ou seja, os grupos. Nesse caso, do emmeans\n\n\n\n  \n\n\n\nCode\n pwpm(m) #mostra as médias na diagonal e compara entre os tratamentos em forma de matriz \n\n\n        Fasi    Faus    Fcor    Fgra    Fmer\nFasi [1.572]  0.0023  0.0302  &lt;.0001  0.3765\nFaus   0.335 [1.237]  0.8169  0.0031  0.1469\nFcor   0.250  -0.085 [1.322]  0.0002  0.6761\nFgra   0.660   0.325   0.410 [0.912]  &lt;.0001\nFmer   0.145  -0.190  -0.105  -0.515 [1.427]\n\nRow and column labels: especie\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n\n\nCode\n pairs(m) #mostra as médias em lista e compara, igual o anterior, mas com formas de saída diferentes. Mostra os resultados pareados\n\n\n contrast    estimate    SE df t.ratio p.value\n Fasi - Faus    0.335 0.079 25   4.241  0.0023\n Fasi - Fcor    0.250 0.079 25   3.165  0.0302\n Fasi - Fgra    0.660 0.079 25   8.356  &lt;.0001\n Fasi - Fmer    0.145 0.079 25   1.836  0.3765\n Faus - Fcor   -0.085 0.079 25  -1.076  0.8169\n Faus - Fgra    0.325 0.079 25   4.115  0.0031\n Faus - Fmer   -0.190 0.079 25  -2.405  0.1469\n Fcor - Fgra    0.410 0.079 25   5.191  0.0002\n Fcor - Fmer   -0.105 0.079 25  -1.329  0.6761\n Fgra - Fmer   -0.515 0.079 25  -6.520  &lt;.0001\n\nP value adjustment: tukey method for comparing a family of 5 estimates \n\n\nCode\n#no caso acima a  normalidade estava ok e as variancias eram nos resíduos \n\n\n\n\nQuando os dados não seguem distribuição normal…\n\n\nCode\n#aqui utilizamos um banco de dados do proprio R. \n\ninsetos &lt;- InsectSprays\nView(insetos) #comando para visualizar o conjunto de dados\n\n insetos |&gt; \n   ggplot(aes(spray, count))+\n   geom_boxplot(outlier.colour = NA)+\n   geom_jitter(width = 0.1)\n\n\n\n\n\n\n\n\n\nCode\n #modelo de anova para inspecionar normalidade e variancia \n anova3 &lt;- lm(count ~spray, data = insetos)\n   anova(anova3)\n\n\n\n  \n\n\n\nCode\n   #teste para variaveis homogeneas \n   bartlett.test(count ~spray, data = insetos)\n\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  count by spray\nBartlett's K-squared = 25.96, df = 5, p-value = 9.085e-05\n\n\nCode\n   #sempre que a variancia for heterogenea tem que ajustar \n   \n  #Ajusta um modelo linear (lm) para verificar se o tipo de spray tem efeito no número de insetos mortos (count) \n   \n   m2 &lt;- lm(count ~spray, data = insetos)\n   hist(residuals (m2))\n\n\n\n\n\n\n\n\n\nCode\n   shapiro.test(residuals(m2))\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(m2)\nW = 0.96006, p-value = 0.02226\n\n\nCode\n   #neste caso não é distribuição normal e nem homogenea \n   \n   #verificar visualmente se os resíduos do modelo m2 seguem uma distribuição normal\n   qqnorm(residuals(m2))\n   qqline(residuals(m2))\n\n\n\n\n\n\n\n\n\nCode\n   #quando chamar qqnorm e qqline juntos a linha e os pontos tem que estar juntos, para ser de fato normal, indicar normalidade.  \n\n\n\n\nAlternativas quando os dados não seguirem normalidade e homogenedade\nTem 3 alternativas para os casos em que isso ocorra, dados não normais e heterogeneos (em ANOVA)\n\nAlternativa 1: transformação de dados, transformar a resposta\n\n\nCode\n   #primeiro testa função log\n   m3 &lt;- lm(log(count + 0.1) ~spray, data = insetos)\n   hist(residuals (m3))\n\n\n\n\n\n\n\n\n\nCode\n   shapiro.test(residuals(m3))\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(m3)\nW = 0.8663, p-value = 1.736e-06\n\n\nCode\n   qqnorm(residuals(m3))\n     qqline(residuals(m3))\n\n\n\n\n\n\n\n\n\nCode\n   #continuou com o erro, agora testa raiz quadrada \n   \n   #REGRA: neste caso a raiz é uma boa saída pois quando são dados de contagem numa distribuição de poisson não normal, a raiz quadrada tende a normalizar a contagem individual. \n  #aplica o modelo raiz quadrada e aplica a Anova parametrica normal \n  \n   m4 &lt;- lm(sqrt(count) ~ spray, data = insetos)\n   hist(residuals (m4))\n\n\n\n\n\n\n\n\n\nCode\n   shapiro.test(residuals(m4))\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(m4)\nW = 0.98721, p-value = 0.6814\n\n\nCode\n   qqnorm(residuals(m4))\n   qqline(residuals(m4))\n\n\n\n\n\n\n\n\n\nCode\n   #testar se as variâncias são homogêneas\n   bartlett.test(sqrt(count) ~spray, data = insetos)\n\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  sqrt(count) by spray\nBartlett's K-squared = 3.7525, df = 5, p-value = 0.5856\n\n\nCode\n   anova(m4)\n\n\n\n  \n\n\n\nCode\n   report(m4)\n\n\nWe fitted a linear model (estimated using OLS) to predict count with spray\n(formula: sqrt(count) ~ spray). The model explains a statistically significant\nand substantial proportion of variance (R2 = 0.77, F(5, 66) = 44.80, p &lt; .001,\nadj. R2 = 0.76). The model's intercept, corresponding to spray = A, is at 3.76\n(95% CI [3.40, 4.12], t(66) = 20.73, p &lt; .001). Within this model:\n\n  - The effect of spray [B] is statistically non-significant and positive (beta =\n0.12, 95% CI [-0.40, 0.63], t(66) = 0.45, p = 0.653; Std. beta = 0.04, 95% CI\n[-0.15, 0.23])\n  - The effect of spray [C] is statistically significant and negative (beta =\n-2.52, 95% CI [-3.03, -2.00], t(66) = -9.81, p &lt; .001; Std. beta = -0.94, 95%\nCI [-1.13, -0.75])\n  - The effect of spray [D] is statistically significant and negative (beta =\n-1.60, 95% CI [-2.11, -1.08], t(66) = -6.22, p &lt; .001; Std. beta = -0.59, 95%\nCI [-0.79, -0.40])\n  - The effect of spray [E] is statistically significant and negative (beta =\n-1.95, 95% CI [-2.46, -1.44], t(66) = -7.61, p &lt; .001; Std. beta = -0.73, 95%\nCI [-0.92, -0.54])\n  - The effect of spray [F] is statistically non-significant and positive (beta =\n0.26, 95% CI [-0.25, 0.77], t(66) = 1.01, p = 0.318; Std. beta = 0.10, 95% CI\n[-0.09, 0.29])\n\nStandardized parameters were obtained by fitting the model on a standardized\nversion of the dataset. 95% Confidence Intervals (CIs) and p-values were\ncomputed using a Wald t-distribution approximation.\n\n\nCode\n   m44 &lt;- emmeans(m4, ~spray, type = \"response\")\n   cld(m44)\n\n\n\n  \n\n\n\nCode\n   plot(m44)\n\n\n\n\n\n\n\n\n\n\n\nAlternativa 2: teste não parametrico equivalente a anova\n\n\nCode\n#ou seja ele não depende das duas premissas de normalidade e homogeneidade, ele faz um ranqueamento, tipo o wilcox\n\n   #O teste de Kruskal-Wallis é um método estatístico não paramétrico que compara se três ou mais grupos têm a mesma distribuição. \n\n   #mas este teste só diz que pelo menos um é diferente, mas não aponta quais são. \n   \n   kruskal.test(count ~ spray, data = insetos)\n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  count by spray\nKruskal-Wallis chi-squared = 54.691, df = 5, p-value = 1.511e-10\n\n\nCode\n   kruskal_test(insetos, count ~ spray)\n\n\n\n  \n\n\n\nCode\n   #Para realizar o teste de Kruskal-Wallis e fazer comparações múltiplas pós-hoc entre os grupos, semelhante ao Tukey, mas para dados não paramétricos.\n   \n   library(agricolae) \n   kruskal.test(insetos$count, insetos$spray, group = TRUE, console = TRUE) \n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  insetos$count and insetos$spray\nKruskal-Wallis chi-squared = 54.691, df = 5, p-value = 1.511e-10\n\n\nCode\n   #Mostra o p valor e a diferença entre as médias. O \"group = true\" exibe as letras dos agrupamentos, enquanto \"console = true\" apresenta os resultados no console\n   \n   #como foi significante, transforma para rank para fazer o não parametrico. \n   \n  m5 &lt;- lm(rank(count) ~spray, data = insetos)\n  m5\n\n\n\nCall:\nlm(formula = rank(count) ~ spray, data = insetos)\n\nCoefficients:\n(Intercept)       sprayB       sprayC       sprayD       sprayE       sprayF  \n     52.167        2.667      -40.708      -26.583      -32.833        3.458  \n\n\nCode\n   hist(residuals (m5))\n\n\n\n\n\n\n\n\n\nCode\n   shapiro.test(residuals(m5))\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(m5)\nW = 0.98287, p-value = 0.4342\n\n\nCode\n   qqnorm(residuals(m5))\n   qqline(residuals(m5))\n\n\n\n\n\n\n\n\n\nCode\n   #quando partir para a alternativa a anova parametrica? ou seja, quando não possui normalidade nem homogeneidade dos dados.(usando shapiro-wilk, que testa normalidade dos residuos, e o bartlett ou levene que testam a homogeneidade)\n   \n   #essas comparações multiplas são post-hoc, as duas primeiras opções, mas quando não dá siguinificativo não faz post hoc, pois não tem diferença entre grupos \n  \n    #quando não tem via de transformação, nada resolveu o problema de normalidade e homocedasticidade, tem que usar não parametrico mesmo!\n\n\n\n\nCode\n    #utilizando o pacote DHARMa \n#install.packages(\"DHARMa\")\nlibrary(DHARMa)\n\n   #faz uma simulação dos residuos, não pega somente  observação \n   #o DHARMa é mais intuitivo, ao invés de usar Levene, hist, qqnorm, shapiro..., pode usar o teste DHARMa como padrão. Para ver visualmente todas estas estatisticas em uma única função, por meio da simulação dos resíduos. Dando siguinificativo, vai para os testes post hoc\n   \nlibrary(emmeans)\nlibrary(tidyverse)\n\ninsetos &lt;- InsectSprays\nView(insetos)\nm2 &lt;- lm(count ~ spray, data = insetos) #variâncias não são homogêneas\nplot(simulateResiduals(m2))\n\n\n\n\n\n\n\n\n\nCode\nm2 &lt;- lm(log(count+1) ~ spray, data = insetos) #transformar os dados para tornar as variâncias homogêneas\nplot(simulateResiduals(m2))\n\n\n\n\n\n\n\n\n\nCode\n    library(emmeans) #para estimar as médias\nlibrary(multcomp)\nm2.2 &lt;- emmeans(m2, ~ spray, type = \"response\")\ncld(m2.2)\n\n\n\n  \n\n\n\n\n\nAlternativa 3: alternativa paramétrica - Modelos lineares generalizados (GLMs)\n\n\nCode\n   #nas ANOVAs, possuem um tipos especial de modelo linear generalizado, onde a distribuição é normal, Gaussiana, existem familias de dirtrubuição. \n   #no caso de dados de contagem, como de insetos, usa de Poisson, neste caso não galsiana. \n   \n      m2.3 &lt;- glm(count ~ spray, data = insetos, \n             family = poisson)\n      \n         m2.3 \n\n\n\nCall:  glm(formula = count ~ spray, family = poisson, data = insetos)\n\nCoefficients:\n(Intercept)       sprayB       sprayC       sprayD       sprayE       sprayF  \n    2.67415      0.05588     -1.94018     -1.08152     -1.42139      0.13926  \n\nDegrees of Freedom: 71 Total (i.e. Null);  66 Residual\nNull Deviance:      409 \nResidual Deviance: 98.33    AIC: 376.6\n\n\nCode\n         anova(m2.3)\n\n\n\n  \n\n\n\nCode\n          plot(simulateResiduals(m2.3))\n\n\n\n\n\n\n\n\n\nCode\n         library(car)\n         Anova(m2.3)\n\n\n\n  \n\n\n\nCode\n         medias_m2.3 &lt;- emmeans(m2.3, ~ spray, type = \"response\")\n         medias_m2.3\n\n\n spray  rate    SE  df asymp.LCL asymp.UCL\n A     14.50 1.100 Inf     12.50     16.82\n B     15.33 1.130 Inf     13.27     17.72\n C      2.08 0.417 Inf      1.41      3.08\n D      4.92 0.640 Inf      3.81      6.35\n E      3.50 0.540 Inf      2.59      4.74\n F     16.67 1.180 Inf     14.51     19.14\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the log scale \n\n\nCode\n         cld(medias_m2.3)\n\n\n\n  \n\n\n\nCode\n    #outra forma de testar o modelo \n         #install.packages(\"performance\") \n         library(performance)\n        performance(m2.3)\n\n\n\n  \n\n\n\nCode\n        check_model(m2.3)\n\n\n\n\n\n\n\n\n\nCode\n        #dados de sim e não, usa a familia binomial \n        #o professor recomenda usar o DHARMa ao invés do check model, ele não é tão consistente"
  },
  {
    "objectID": "Aula_5_Comparação de Tratamentos com ANOVA, Modelos Mistos e Correlação.html",
    "href": "Aula_5_Comparação de Tratamentos com ANOVA, Modelos Mistos e Correlação.html",
    "title": "Aula_5_Comparação de Tratamentos com ANOVA, Modelos Mistos e Correlação",
    "section": "",
    "text": "Complementando a aula anterior, nesta aula revisamos a ANOVA tradicional e aplicamos testes de médias. Como nova análise temos os modelos lineares mistos, utilizados quando há estruturas de dados mais complexas, como parcelas subdivididas e efeitos aleatórios. Introduzindo também correlação e regressão linear, que permitem avaliar relações entre variáveis contínuas.\n\n\nCode\nlibrary(gsheet)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(Hmisc)\n\ngsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=866852711#gid=866852711\")\n\n\n\n  \n\n\n\nCode\ncampo &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=866852711#gid=866852711\")\n\ncampo\n\n\n\n  \n\n\n\nCode\n#visualizando os dados \n\ncampo |&gt; \n  ggplot(aes(TRAT, PROD))+\n  geom_jitter(width = 0.1)+\n  stat_summary(\n    fun.data = \"mean_cl_boot\",\n    colour = \"magenta\", width = 0.3)\n\n\n\n\n\n\n\n\n\nCode\n#o comando mean_cl_boot acima, plota a média no gráfico \n\ncampo$TRAT &lt;- factor(campo$TRAT)\ncampo$BLOCO &lt;- factor(campo$BLOCO)\n\n#a função factor é utilizada para transformar variáveis em fatores. Neste caso, foi utilizada para transformar os blocos e tratamentos, que estavam em números e o R poderia interpretar como valores. \n\n#Anova\nm_campo &lt;- lm(PROD ~ BLOCO + TRAT, data = campo)\nanova (m_campo)\n\n\n\n  \n\n\n\nCode\nplot(m_campo)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#verificar os pressuposto de normalidade e homogeneidade \nlibrary(DHARMa)\nsimulateResiduals(m_campo)\n\n\nObject of Class DHARMa with simulated residuals based on 250 simulations with refit = FALSE . See ?DHARMa::simulateResiduals for help. \n \nScaled residual values: 0.788 0.648 0.804 0.012 0.496 0.432 0.52 0.588 0.516 0.544 0.668 0.292 0.356 0.76 0.108 0.804 0.628 0.112 0.82 0.516 ...\n\n\nCode\nplot(simulateResiduals(m_campo))\n\n\n\n\n\n\n\n\n\nCode\n#para visualizar as médias marginais estimadas\nlibrary(emmeans)\nmeans_campo &lt;- emmeans(m_campo, ~TRAT)\nmeans_campo\n\n\n TRAT emmean  SE df lower.CL upper.CL\n 1      4219 201 21     3800     4638\n 2      4935 201 21     4516     5354\n 3      5110 201 21     4691     5529\n 4      5140 201 21     4721     5559\n 5      5122 201 21     4703     5541\n 6      5256 201 21     4837     5675\n 7      5128 201 21     4709     5546\n 8      5078 201 21     4659     5497\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n\n\nCode\n#teste de comparação multipla \nlibrary(multcomp)\ncld(means_campo)\n\n\n\n  \n\n\n\nCode\n#para comparações em matriz\npwpm(means_campo)\n\n\n        1       2       3       4       5       6       7      8\n1  [4219]  0.2430  0.0792  0.0640  0.0728  0.0272  0.0700 0.0985\n2  -715.8  [4935]  0.9983  0.9953  0.9974  0.9430  0.9968 0.9995\n3  -890.8  -175.0  [5110]  1.0000  1.0000  0.9994  1.0000 1.0000\n4  -921.0  -205.3   -30.2  [5140]  1.0000  0.9999  1.0000 1.0000\n5  -902.8  -187.0   -12.0    18.3  [5122]  0.9997  1.0000 1.0000\n6 -1037.0  -321.3  -146.2  -116.0  -134.3  [5256]  0.9998 0.9981\n7  -908.3  -192.5   -17.5    12.8    -5.5   128.8  [5127] 1.0000\n8  -859.0  -143.2    31.8    62.0    43.8   178.0    49.2 [5078]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n\n\nCode\n#para ferrugem \n#Anova \nf_campo &lt;- lm(FER ~ BLOCO + TRAT, data = campo)\nanova (f_campo)\n\n\n\n  \n\n\n\nCode\n#teste de pressupostos de homogeneidade e normalidade \nplot(simulateResiduals(f_campo))\n\n\n\n\n\n\n\n\n\nCode\n#como não seguiu o pressuposto de homogeneidade, pode-se tentar transformar os dados \n\nf_campo &lt;- lm(log(FER) ~ BLOCO + TRAT, data = campo)\nanova (f_campo)\n\n\n\n  \n\n\n\nCode\nmeans_f_campo &lt;- emmeans(f_campo, ~TRAT, type = \"response\")\n#utiliza-se a função type = response para sinalizar que os dados foram transformados, mas que os resultados devem ser retornados em valores reais \nmeans_f_campo\n\n\n TRAT response    SE df lower.CL upper.CL\n 1       20.02 1.960 21    16.33    24.54\n 2        5.68 0.556 21     4.63     6.96\n 3        3.81 0.373 21     3.11     4.67\n 4        3.08 0.301 21     2.51     3.78\n 5        3.24 0.317 21     2.64     3.97\n 6        2.98 0.292 21     2.43     3.65\n 7        3.37 0.330 21     2.75     4.13\n 8        3.48 0.341 21     2.84     4.27\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nIntervals are back-transformed from the log scale \n\n\nCode\nplot(means_f_campo)\n\n\n\n\n\n\n\n\n\nCode\n#teste de comparação multipla \nlibrary(multcomp)\ncld(means_f_campo, Letters = letters)\n\n\n\n  \n\n\n\nCode\n#adicionar o comando Letters = letters, retorna letras ao invés de números no resultado do teste de médias \npwpp(means_f_campo)\n\n\n\n\n\n\n\n\n\nCode\npwpm(means_f_campo)\n\n\n        1       2       3       4       5       6       7       8\n1 [20.02]  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001\n2   3.525 [ 5.68]  0.1252  0.0048  0.0110  0.0028  0.0204  0.0343\n3   5.259   1.492 [ 3.81]  0.7832  0.9335  0.6440  0.9843  0.9976\n4   6.500   1.844   1.236 [ 3.08]  0.9999  1.0000  0.9976  0.9842\n5   6.178   1.753   1.175   0.951 [ 3.24]  0.9984  1.0000  0.9994\n6   6.721   1.906   1.278   1.034   1.088 [ 2.98]  0.9842  0.9431\n7   5.945   1.686   1.130   0.915   0.962   0.885 [ 3.37]  1.0000\n8   5.750   1.631   1.093   0.885   0.931   0.856   0.967 [ 3.48]\n\nRow and column labels: TRAT\nUpper triangle: P values   null = 1  adjust = \"tukey\"\nDiagonal: [Estimates] (response)   type = \"response\"\nLower triangle: Comparisons (ratio)   earlier vs. later\n\n\nCode\nlibrary(agricolae)\ncv.model(f_campo)\n\n\n[1] 13.13068\n\n\n\n\n\n\n\nCode\ngsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1345524759#gid=1345524759\")\n\n\n\n  \n\n\n\nCode\nmilho &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1345524759#gid=1345524759\")\nmilho \n\n\n\n  \n\n\n\nCode\nmilho |&gt; \n  ggplot(aes(hybrid, index, color = method))+\n  geom_jitter(width = 0.1)+\n  coord_flip()+\n  facet_wrap(~ method)\n\n\n\n\n\n\n\n\n\nCode\n#para modelos mistos (introduzir fator aleatório no modelo) deve ser utilizado o pacote lme4. \n#install.packages(\"lme4\")\nlibrary(lme4)\n\n#cria um indentificador para a interação  híbrido bloco\n\nmilho$hybrid_block &lt;- interaction(milho$hybrid, milho$block)\n\nmilho |&gt; \n  mutate(hybrid_block = interaction(hybrid, block))\n\n\n\n  \n\n\n\nCode\n#modelo misto \nm_milho &lt;- lmer(index ~ hybrid*method+\n                (1 | block:hybrid_block), data = milho)\n  \ncar::Anova(m_milho)\n\n\n\n  \n\n\n\nCode\nplot(simulateResiduals(m_milho))\n\n  \n  media_milho &lt;- emmeans(m_milho, ~ hybrid | method)\n  media_milho\n\n\nmethod = pin:\n hybrid   emmean   SE   df lower.CL upper.CL\n 30F53 HX   25.3 3.57 24.9     17.9     32.6\n 30F53 YH   24.6 3.57 24.9     17.3     31.9\n 30K64      20.6 3.57 24.9     13.2     27.9\n 30S31H     38.1 3.57 24.9     30.8     45.4\n 30S31YH    32.5 3.57 24.9     25.2     39.8\n BG7049H    19.4 3.57 24.9     12.1     26.8\n\nmethod = silk:\n hybrid   emmean   SE   df lower.CL upper.CL\n 30F53 HX   25.0 3.57 24.9     17.7     32.3\n 30F53 YH   26.2 3.57 24.9     18.9     33.6\n 30K64      21.5 3.57 24.9     14.2     28.8\n 30S31H     26.5 3.57 24.9     19.2     33.8\n 30S31YH    26.6 3.57 24.9     19.3     34.0\n BG7049H    19.2 3.57 24.9     11.8     26.5\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\nCode\n  cld(media_milho, Letters = letters)\n\n\n\n  \n\n\n\nCode\n  #para comparar na linha \n  \n  plot(simulateResiduals(m_milho))\n\n\n\n\n\n\n\n\n\nCode\n  media_milho &lt;- emmeans(m_milho, ~ method | hybrid)\n  media_milho\n\n\nhybrid = 30F53 HX:\n method emmean   SE   df lower.CL upper.CL\n pin      25.3 3.57 24.9     17.9     32.6\n silk     25.0 3.57 24.9     17.7     32.3\n\nhybrid = 30F53 YH:\n method emmean   SE   df lower.CL upper.CL\n pin      24.6 3.57 24.9     17.3     31.9\n silk     26.2 3.57 24.9     18.9     33.6\n\nhybrid = 30K64:\n method emmean   SE   df lower.CL upper.CL\n pin      20.6 3.57 24.9     13.2     27.9\n silk     21.5 3.57 24.9     14.2     28.8\n\nhybrid = 30S31H:\n method emmean   SE   df lower.CL upper.CL\n pin      38.1 3.57 24.9     30.8     45.4\n silk     26.5 3.57 24.9     19.2     33.8\n\nhybrid = 30S31YH:\n method emmean   SE   df lower.CL upper.CL\n pin      32.5 3.57 24.9     25.2     39.8\n silk     26.6 3.57 24.9     19.3     34.0\n\nhybrid = BG7049H:\n method emmean   SE   df lower.CL upper.CL\n pin      19.4 3.57 24.9     12.1     26.8\n silk     19.2 3.57 24.9     11.8     26.5\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\nCode\n  cld(media_milho, Letters = letters)\n\n\n\n  \n\n\n\nCode\n #para produtividade \n  \n  m_milho2 &lt;- lmer(yield ~hybrid*method+\n                (1 | block:hybrid_block), data = milho)\n  \n  car::Anova(m_milho)\n\n\n\n  \n\n\n\nCode\n  plotSimulatedResiduals(m_milho)\n\n\n\n\n\n\n\n\n\nCode\n  media_milho &lt;- emmeans(m_milho, ~ hybrid | method)\ncld(media_milho, Letters = letters)\n\n\n\n  \n\n\n\nCode\nmedia_milho2 &lt;- emmeans(m_milho, ~ method | hybrid)\ncld(media_milho2, Letters = letters)\n\n\n\n  \n\n\n\nCode\n    #relação yeld e index \n  milho |&gt;\n    ggplot(aes(index, yield))+\n    geom_point()+\n    geom_smooth(method = \"lm\")\n\n\n\n\n\n\n\n\n\nCode\n  #para análise de correlação\n  cor.test(milho$index, milho$yield)   \n\n\n\n    Pearson's product-moment correlation\n\ndata:  milho$index and milho$yield\nt = -1.7622, df = 46, p-value = 0.08468\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.49988704  0.03517829\nsample estimates:\n       cor \n-0.2514699 \n\n\nCode\n  cor1 &lt;- cor(milho$index, milho$yield)\n  #acima, duas maneiras de  determinar o coeficiente de correlação\n  \n  cor1*cor1*100\n\n\n[1] 6.323713\n\n\nCode\n  #acima, calcula-se o coeficiente de determinação: quanto da variação de y está sendo explicado por x"
  },
  {
    "objectID": "Aula_5_Comparação de Tratamentos com ANOVA, Modelos Mistos e Correlação.html#anova",
    "href": "Aula_5_Comparação de Tratamentos com ANOVA, Modelos Mistos e Correlação.html#anova",
    "title": "Aula_5_Comparação de Tratamentos com ANOVA, Modelos Mistos e Correlação",
    "section": "",
    "text": "Complementando a aula anterior, nesta aula revisamos a ANOVA tradicional e aplicamos testes de médias. Como nova análise temos os modelos lineares mistos, utilizados quando há estruturas de dados mais complexas, como parcelas subdivididas e efeitos aleatórios. Introduzindo também correlação e regressão linear, que permitem avaliar relações entre variáveis contínuas.\n\n\nCode\nlibrary(gsheet)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(Hmisc)\n\ngsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=866852711#gid=866852711\")\n\n\n\n  \n\n\n\nCode\ncampo &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=866852711#gid=866852711\")\n\ncampo\n\n\n\n  \n\n\n\nCode\n#visualizando os dados \n\ncampo |&gt; \n  ggplot(aes(TRAT, PROD))+\n  geom_jitter(width = 0.1)+\n  stat_summary(\n    fun.data = \"mean_cl_boot\",\n    colour = \"magenta\", width = 0.3)\n\n\n\n\n\n\n\n\n\nCode\n#o comando mean_cl_boot acima, plota a média no gráfico \n\ncampo$TRAT &lt;- factor(campo$TRAT)\ncampo$BLOCO &lt;- factor(campo$BLOCO)\n\n#a função factor é utilizada para transformar variáveis em fatores. Neste caso, foi utilizada para transformar os blocos e tratamentos, que estavam em números e o R poderia interpretar como valores. \n\n#Anova\nm_campo &lt;- lm(PROD ~ BLOCO + TRAT, data = campo)\nanova (m_campo)\n\n\n\n  \n\n\n\nCode\nplot(m_campo)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#verificar os pressuposto de normalidade e homogeneidade \nlibrary(DHARMa)\nsimulateResiduals(m_campo)\n\n\nObject of Class DHARMa with simulated residuals based on 250 simulations with refit = FALSE . See ?DHARMa::simulateResiduals for help. \n \nScaled residual values: 0.788 0.648 0.804 0.012 0.496 0.432 0.52 0.588 0.516 0.544 0.668 0.292 0.356 0.76 0.108 0.804 0.628 0.112 0.82 0.516 ...\n\n\nCode\nplot(simulateResiduals(m_campo))\n\n\n\n\n\n\n\n\n\nCode\n#para visualizar as médias marginais estimadas\nlibrary(emmeans)\nmeans_campo &lt;- emmeans(m_campo, ~TRAT)\nmeans_campo\n\n\n TRAT emmean  SE df lower.CL upper.CL\n 1      4219 201 21     3800     4638\n 2      4935 201 21     4516     5354\n 3      5110 201 21     4691     5529\n 4      5140 201 21     4721     5559\n 5      5122 201 21     4703     5541\n 6      5256 201 21     4837     5675\n 7      5128 201 21     4709     5546\n 8      5078 201 21     4659     5497\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \n\n\nCode\n#teste de comparação multipla \nlibrary(multcomp)\ncld(means_campo)\n\n\n\n  \n\n\n\nCode\n#para comparações em matriz\npwpm(means_campo)\n\n\n        1       2       3       4       5       6       7      8\n1  [4219]  0.2430  0.0792  0.0640  0.0728  0.0272  0.0700 0.0985\n2  -715.8  [4935]  0.9983  0.9953  0.9974  0.9430  0.9968 0.9995\n3  -890.8  -175.0  [5110]  1.0000  1.0000  0.9994  1.0000 1.0000\n4  -921.0  -205.3   -30.2  [5140]  1.0000  0.9999  1.0000 1.0000\n5  -902.8  -187.0   -12.0    18.3  [5122]  0.9997  1.0000 1.0000\n6 -1037.0  -321.3  -146.2  -116.0  -134.3  [5256]  0.9998 0.9981\n7  -908.3  -192.5   -17.5    12.8    -5.5   128.8  [5127] 1.0000\n8  -859.0  -143.2    31.8    62.0    43.8   178.0    49.2 [5078]\n\nRow and column labels: TRAT\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (emmean) \nLower triangle: Comparisons (estimate)   earlier vs. later\n\n\nCode\n#para ferrugem \n#Anova \nf_campo &lt;- lm(FER ~ BLOCO + TRAT, data = campo)\nanova (f_campo)\n\n\n\n  \n\n\n\nCode\n#teste de pressupostos de homogeneidade e normalidade \nplot(simulateResiduals(f_campo))\n\n\n\n\n\n\n\n\n\nCode\n#como não seguiu o pressuposto de homogeneidade, pode-se tentar transformar os dados \n\nf_campo &lt;- lm(log(FER) ~ BLOCO + TRAT, data = campo)\nanova (f_campo)\n\n\n\n  \n\n\n\nCode\nmeans_f_campo &lt;- emmeans(f_campo, ~TRAT, type = \"response\")\n#utiliza-se a função type = response para sinalizar que os dados foram transformados, mas que os resultados devem ser retornados em valores reais \nmeans_f_campo\n\n\n TRAT response    SE df lower.CL upper.CL\n 1       20.02 1.960 21    16.33    24.54\n 2        5.68 0.556 21     4.63     6.96\n 3        3.81 0.373 21     3.11     4.67\n 4        3.08 0.301 21     2.51     3.78\n 5        3.24 0.317 21     2.64     3.97\n 6        2.98 0.292 21     2.43     3.65\n 7        3.37 0.330 21     2.75     4.13\n 8        3.48 0.341 21     2.84     4.27\n\nResults are averaged over the levels of: BLOCO \nConfidence level used: 0.95 \nIntervals are back-transformed from the log scale \n\n\nCode\nplot(means_f_campo)\n\n\n\n\n\n\n\n\n\nCode\n#teste de comparação multipla \nlibrary(multcomp)\ncld(means_f_campo, Letters = letters)\n\n\n\n  \n\n\n\nCode\n#adicionar o comando Letters = letters, retorna letras ao invés de números no resultado do teste de médias \npwpp(means_f_campo)\n\n\n\n\n\n\n\n\n\nCode\npwpm(means_f_campo)\n\n\n        1       2       3       4       5       6       7       8\n1 [20.02]  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001  &lt;.0001\n2   3.525 [ 5.68]  0.1252  0.0048  0.0110  0.0028  0.0204  0.0343\n3   5.259   1.492 [ 3.81]  0.7832  0.9335  0.6440  0.9843  0.9976\n4   6.500   1.844   1.236 [ 3.08]  0.9999  1.0000  0.9976  0.9842\n5   6.178   1.753   1.175   0.951 [ 3.24]  0.9984  1.0000  0.9994\n6   6.721   1.906   1.278   1.034   1.088 [ 2.98]  0.9842  0.9431\n7   5.945   1.686   1.130   0.915   0.962   0.885 [ 3.37]  1.0000\n8   5.750   1.631   1.093   0.885   0.931   0.856   0.967 [ 3.48]\n\nRow and column labels: TRAT\nUpper triangle: P values   null = 1  adjust = \"tukey\"\nDiagonal: [Estimates] (response)   type = \"response\"\nLower triangle: Comparisons (ratio)   earlier vs. later\n\n\nCode\nlibrary(agricolae)\ncv.model(f_campo)\n\n\n[1] 13.13068"
  },
  {
    "objectID": "Aula_5_Comparação de Tratamentos com ANOVA, Modelos Mistos e Correlação.html#delineamento-parcelas-subdivididas",
    "href": "Aula_5_Comparação de Tratamentos com ANOVA, Modelos Mistos e Correlação.html#delineamento-parcelas-subdivididas",
    "title": "Aula_5_Comparação de Tratamentos com ANOVA, Modelos Mistos e Correlação",
    "section": "",
    "text": "Code\ngsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1345524759#gid=1345524759\")\n\n\n\n  \n\n\n\nCode\nmilho &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1345524759#gid=1345524759\")\nmilho \n\n\n\n  \n\n\n\nCode\nmilho |&gt; \n  ggplot(aes(hybrid, index, color = method))+\n  geom_jitter(width = 0.1)+\n  coord_flip()+\n  facet_wrap(~ method)\n\n\n\n\n\n\n\n\n\nCode\n#para modelos mistos (introduzir fator aleatório no modelo) deve ser utilizado o pacote lme4. \n#install.packages(\"lme4\")\nlibrary(lme4)\n\n#cria um indentificador para a interação  híbrido bloco\n\nmilho$hybrid_block &lt;- interaction(milho$hybrid, milho$block)\n\nmilho |&gt; \n  mutate(hybrid_block = interaction(hybrid, block))\n\n\n\n  \n\n\n\nCode\n#modelo misto \nm_milho &lt;- lmer(index ~ hybrid*method+\n                (1 | block:hybrid_block), data = milho)\n  \ncar::Anova(m_milho)\n\n\n\n  \n\n\n\nCode\nplot(simulateResiduals(m_milho))\n\n  \n  media_milho &lt;- emmeans(m_milho, ~ hybrid | method)\n  media_milho\n\n\nmethod = pin:\n hybrid   emmean   SE   df lower.CL upper.CL\n 30F53 HX   25.3 3.57 24.9     17.9     32.6\n 30F53 YH   24.6 3.57 24.9     17.3     31.9\n 30K64      20.6 3.57 24.9     13.2     27.9\n 30S31H     38.1 3.57 24.9     30.8     45.4\n 30S31YH    32.5 3.57 24.9     25.2     39.8\n BG7049H    19.4 3.57 24.9     12.1     26.8\n\nmethod = silk:\n hybrid   emmean   SE   df lower.CL upper.CL\n 30F53 HX   25.0 3.57 24.9     17.7     32.3\n 30F53 YH   26.2 3.57 24.9     18.9     33.6\n 30K64      21.5 3.57 24.9     14.2     28.8\n 30S31H     26.5 3.57 24.9     19.2     33.8\n 30S31YH    26.6 3.57 24.9     19.3     34.0\n BG7049H    19.2 3.57 24.9     11.8     26.5\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\nCode\n  cld(media_milho, Letters = letters)\n\n\n\n  \n\n\n\nCode\n  #para comparar na linha \n  \n  plot(simulateResiduals(m_milho))\n\n\n\n\n\n\n\n\n\nCode\n  media_milho &lt;- emmeans(m_milho, ~ method | hybrid)\n  media_milho\n\n\nhybrid = 30F53 HX:\n method emmean   SE   df lower.CL upper.CL\n pin      25.3 3.57 24.9     17.9     32.6\n silk     25.0 3.57 24.9     17.7     32.3\n\nhybrid = 30F53 YH:\n method emmean   SE   df lower.CL upper.CL\n pin      24.6 3.57 24.9     17.3     31.9\n silk     26.2 3.57 24.9     18.9     33.6\n\nhybrid = 30K64:\n method emmean   SE   df lower.CL upper.CL\n pin      20.6 3.57 24.9     13.2     27.9\n silk     21.5 3.57 24.9     14.2     28.8\n\nhybrid = 30S31H:\n method emmean   SE   df lower.CL upper.CL\n pin      38.1 3.57 24.9     30.8     45.4\n silk     26.5 3.57 24.9     19.2     33.8\n\nhybrid = 30S31YH:\n method emmean   SE   df lower.CL upper.CL\n pin      32.5 3.57 24.9     25.2     39.8\n silk     26.6 3.57 24.9     19.3     34.0\n\nhybrid = BG7049H:\n method emmean   SE   df lower.CL upper.CL\n pin      19.4 3.57 24.9     12.1     26.8\n silk     19.2 3.57 24.9     11.8     26.5\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\nCode\n  cld(media_milho, Letters = letters)\n\n\n\n  \n\n\n\nCode\n #para produtividade \n  \n  m_milho2 &lt;- lmer(yield ~hybrid*method+\n                (1 | block:hybrid_block), data = milho)\n  \n  car::Anova(m_milho)\n\n\n\n  \n\n\n\nCode\n  plotSimulatedResiduals(m_milho)\n\n\n\n\n\n\n\n\n\nCode\n  media_milho &lt;- emmeans(m_milho, ~ hybrid | method)\ncld(media_milho, Letters = letters)\n\n\n\n  \n\n\n\nCode\nmedia_milho2 &lt;- emmeans(m_milho, ~ method | hybrid)\ncld(media_milho2, Letters = letters)\n\n\n\n  \n\n\n\nCode\n    #relação yeld e index \n  milho |&gt;\n    ggplot(aes(index, yield))+\n    geom_point()+\n    geom_smooth(method = \"lm\")\n\n\n\n\n\n\n\n\n\nCode\n  #para análise de correlação\n  cor.test(milho$index, milho$yield)   \n\n\n\n    Pearson's product-moment correlation\n\ndata:  milho$index and milho$yield\nt = -1.7622, df = 46, p-value = 0.08468\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.49988704  0.03517829\nsample estimates:\n       cor \n-0.2514699 \n\n\nCode\n  cor1 &lt;- cor(milho$index, milho$yield)\n  #acima, duas maneiras de  determinar o coeficiente de correlação\n  \n  cor1*cor1*100\n\n\n[1] 6.323713\n\n\nCode\n  #acima, calcula-se o coeficiente de determinação: quanto da variação de y está sendo explicado por x"
  },
  {
    "objectID": "Aula_7_Análise_de_dados_com_mapa_Etiopia.html",
    "href": "Aula_7_Análise_de_dados_com_mapa_Etiopia.html",
    "title": "Aula_7_Análise de dados com mapa Etiopia",
    "section": "",
    "text": "O conjunto de dados será o da ferrugem do café na Etiópia que está no arquivo de dados na nuvem.\n\n\nusaremos a função gsheet2tbl() do pacote [gsheet] para carregar os dados no ambiente\n\nlibrary(gsheet)\ncr &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1871397229#gid=1871397229\")\ncr\n\n\n  \n\n\n\n\n\n\n\n\n\nlibrary(DT)\ndatatable(cr)\n\n\n\n\n\n\n\n\n\nlibrary(tidyverse)\ncr |&gt; \n  ggplot(aes(lon, lat))+\n  geom_point()\n\n\n\n\n\n\n\n#remotes::install_github(\"ropensci/rnaturalearthhires\")\n#remotes::install_github(\"ropensci/rnaturalearth\")\nlibrary(rnaturalearth)\nlibrary(rnaturalearthhires)\n#install.packages(\"sf\")\nlibrary(sf)\n#install.packages(\"earth\")\nlibrary(earth)\nETH &lt;- ne_states(country = \"Ethiopia\", \n                 returnclass = \"sf\")\n\nlibrary(tidyverse)\nlibrary(ggthemes)\nlibrary(ggspatial)\n\nggplot(ETH)+\n  geom_sf(fill = \"gray90\")+\n  geom_point(data = cr, aes(lon, lat, color = inc))+\n  scale_color_viridis_c()+\n  theme_minimal()+\n  theme(legend.position = \"bottom\")+\n  annotation_scale(location = \"tl\")+\n  annotation_north_arrow(location = \"br\", which_north = \"true\")+\n  labs(title = \"Ferrugem do café na Etiópia\", x = \"longitude\", y= \"latitude\", subtitle = \"levantamento em fazendas\", caption = \"Fonte: Mesquita et al.(2025)\", \n       color = \"Incidencia (%)\")\n\n\n\n\n\n\n\nggsave(\"mapa.Etiópia.png\", bg = \"white\", width = 10)"
  },
  {
    "objectID": "Aula_7_Análise_de_dados_com_mapa_Etiopia.html#apresentação-do-site",
    "href": "Aula_7_Análise_de_dados_com_mapa_Etiopia.html#apresentação-do-site",
    "title": "Aula_7_Análise de dados com mapa Etiopia",
    "section": "",
    "text": "O conjunto de dados será o da ferrugem do café na Etiópia que está no arquivo de dados na nuvem.\n\n\nusaremos a função gsheet2tbl() do pacote [gsheet] para carregar os dados no ambiente\n\nlibrary(gsheet)\ncr &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1871397229#gid=1871397229\")\ncr\n\n\n  \n\n\n\n\n\n\n\n\n\nlibrary(DT)\ndatatable(cr)\n\n\n\n\n\n\n\n\n\nlibrary(tidyverse)\ncr |&gt; \n  ggplot(aes(lon, lat))+\n  geom_point()\n\n\n\n\n\n\n\n#remotes::install_github(\"ropensci/rnaturalearthhires\")\n#remotes::install_github(\"ropensci/rnaturalearth\")\nlibrary(rnaturalearth)\nlibrary(rnaturalearthhires)\n#install.packages(\"sf\")\nlibrary(sf)\n#install.packages(\"earth\")\nlibrary(earth)\nETH &lt;- ne_states(country = \"Ethiopia\", \n                 returnclass = \"sf\")\n\nlibrary(tidyverse)\nlibrary(ggthemes)\nlibrary(ggspatial)\n\nggplot(ETH)+\n  geom_sf(fill = \"gray90\")+\n  geom_point(data = cr, aes(lon, lat, color = inc))+\n  scale_color_viridis_c()+\n  theme_minimal()+\n  theme(legend.position = \"bottom\")+\n  annotation_scale(location = \"tl\")+\n  annotation_north_arrow(location = \"br\", which_north = \"true\")+\n  labs(title = \"Ferrugem do café na Etiópia\", x = \"longitude\", y= \"latitude\", subtitle = \"levantamento em fazendas\", caption = \"Fonte: Mesquita et al.(2025)\", \n       color = \"Incidencia (%)\")\n\n\n\n\n\n\n\nggsave(\"mapa.Etiópia.png\", bg = \"white\", width = 10)"
  }
]