{"title":"aula_1_Introdução_ao_R_studio","markdown":{"yaml":{"title":"aula_1_Introdução_ao_R_studio","author":"Karine Mesquita","format":{"html":{"code-fold":true,"code-tools":true,"toc":true}},"editor":"visual","editor_options":{"chunk_output_type":"console"},"execute":{"warning":false,"message":false,"echo":true,"include":true}},"headingText":"Notas de Aula","containsRefs":false,"markdown":"\n\n\n# Aula 1 \\_ Introdução ao R studio\n\n## Começando com um teste inicial\n\nNeste chunk temos um exemplo de como criar **objetos** onde serão atribuidos valores.\n\nPara criar objetos, inicialmente criamos um nome para o objeto, seguido dos simbolos \"\\<-\", que é um sinal de atribuição. No exemplo abaixo criamos o objeto \"a\", onde a recebeu o valor 1.\n\n```{r}\na <- 1 \na \nb <- 2\nb\nc <- a+b\nc\n```\n\n#### Além de códigos, também podemos escrever testos no seu documento, aqui vão alguns comandos extras para edição de textos no seu documento:\n\num \\* *deixa em itálico ou* (Ctrl+i); para **negrito** (Ctrl+b); para inserir *link* (Ctrl+k); para inserir novo chunk (Ctrl+alt+i); usar \"\" para sinalizar que é texto e não uma função.\n\nPara explicar mais funções iniciais, vamos importar um conjunto de dados do próprio R.\n\n## Importando um conjunto de dados\n\nNo exemplo abaixo vamos criar o objeto \"dados\" e usando a função que vimso acima, vamos atibuir a ele o conjunto de dados Oranje, que são dados agrupados de um conjunto de dados do R.\n\n```{r}\nOrange\ndados <- Orange\ndados\n```\n\nAos objetos ou data frames (conjunto de dados), podemos aplicar funções, para executar ações. Como é o exemplo da função `plot()`. Esta função é básica do R e serve para plotar gráficos que permitem visualizar os dados de forma gráfica para uma análise visual rápida. Lembre-se que, não basta chamar a função, o seu objeto/data frame deve estar dentro de \"()\" para que a função seja executada.\n\n```{r}\nplot(dados)\n```\n\nMas para visualizar os dados de maneira correta é importante saber o que voce precisa/quer visualizar. Ao chamar \"dados\" podemos observar que o data frame é composto por 3 colunas: Tree, age, circunference. Podemos então utilizar outras funções para nos auxiliar.\n\n```{r}\nplot(dados$circumference) \nplot(dados$Tree) \nplot(dados$age)\n```\n\nAcima utilizamos o sinal \"\\$\", utilizado para isolar um vetor de dados específico do data frame.\n\nPodemos criar um novo objeto e atribuir a ele o vetor de dados isolado.\n\nOu, podemos utilizar a função \"`attach`\" para desagregar o data frame e criar vetores independentes.\n\nBônus: a função \"`detach`\" é o oposto da função anterior.\n\n```{r}\ncirc <- dados$circumference \ncirc \n#ou \nattach(dados) \ncircumference \n```\n\n# Pacotes\n\nOs chamados \"pacotes\" no R são um conjunto de funções, ferramentas (ou como vimos acima, dados) prontos, que forma criados (ou já vem no R base). São utilizados para realizar atividdaes especificas no R, como plotar gráficos personalizaveis, como é o exemplo do pacote \"ggplot2\".\n\nInicialmente utilizamos a função \"`library()`\", para ativar/carregar o pacote. Caso o pacote ainda não esteja instalado em sua biblioteca, utilizamos a função \"`install.packages()`\" para que o pacote seja instalado.\n\n### Agricolae\n\nNeste exemplo ativaremos o pacote \"agricolae\", que é uma ferramenta para análise estatistica para pesquisa com experimentos agrícolas.\n\n```{r}\n#install.packages(\"agricolae\")\nlibrary(agricolae)\ndates <- c (7,14,21,28,35,42)\ndates\nseverity <- c (0.1, 5, 10, 35, 50, 60)\nseverity \naudpc (severity, dates)\n\n#carregando outro pacote de dados/dataframe\ndata(\"corn\")\nstr(corn)\n```\n\nNo chunk acima, além de ativar a biblioteca, criamos um vetor de dados numéricos. Usando a função `c().` O vetor de dados armazena uma sequencia de dados.\n\nPara o vetor de dados criado, utilizamos a função \"audpc\". Este é um comando do pacote agricolae para calcular a área abaixo da curva sobre severiade de doenças ao longo do tempo.\n\nDepois usamos o comando \"str\" que é um comando do pacote agricolae que é útil para verificar rapidamente a estrutura de um objeto, especialmente quando se trabalha com conjuntos de dados maiores.\n\n### Tidyverse\n\nO pacote \"tidyverse\" possui uma série de funções diferentes, que facilitam o tratamento de dados. Alguns exemplos são: pacotes para importação de dados (readr, readxl), visualização de dados (ggplot2), manipulação de dados (dplyr , tidyr), criação de modelos (tidymodels) etc.\n\n```{r}\nlibrary(tidyverse)\ndates <- c (7,14,21,28,35,42)\nseverity <- c (0.1, 5, 10, 35, 50, 60)\n#Juntando dates e severity em um objeto\ndata_curva <- data.frame(dates, severity)\ndata_curva\nstr(data_curva)\n```\n\n#### ggplot\n\nEsta é a função principal do pacote **ggplot2**, que faz parte do pacote ativado no chunk anterior, **tidyverse**.\\\nCom ele, vamos construir gráficos editaveis.\n\n#### dplyr\n\nÉ mais uma função do pacote **tidyverse,** é útil para **manipular** dados (filtrar, selecionar, agrupar)\n\n```{r}\nlibrary(dplyr)\nlibrary(ggplot2)\ndata_curva |> \n  ggplot(aes(dates, severity))+\n  geom_area(fill=\"lightblue\", alpha= 0.5)+geom_line(color= \"orange\", size=1)+geom_point(color=\"darkblue\", size=2)\n\n# explicação de alguns comandos:\n#geom_area(fill = \"lightblue\", alpha = 0.5) muda a cor da área\n#geom_line(color = \"orange\", size = 1)  muda a cor da linha\n#geom_point(color = \"darkblue\", size = 2) muda a cor dos pontos\n\n#para adicionar outra variável no gráfico \nseverity2 <- c(1,10,35,58,70,79)\ndata.frame(severity2)\n\n  data_curva |> \n    mutate(severity2 = c(1, 10, 35, 58, 70, 90)) |> # Adiciona a nova coluna aqui\n     ggplot(aes(dates, severity))+\n  geom_area(fill=\"lightblue\", alpha= 0.5)+\n    geom_line(color= \"orange\", linewidth=2)+\n    geom_point(color=\"darkblue\", size=2)+\n    theme_minimal()+ #muda tema do gráfico\n    labs(title = \"Progresso da Severidade da Doença\", subtitle = \"Avaliação ao longo dos dias\", x = \"Dias após a inoculação\", y = \"Severidade (%)\", caption = \"Fonte: Experimento 2025\")+ #para customizar o gráfico, eixos, títulos e etc\n    scale_y_continuous(limits = c (0,100))+\n    scale_x_continuous(limits = c (0, 44)) #para mudar a escala dos eixos\n  \n```\n\nO comando \"`|>`\" é conhecido como \"pipe\" e serve para encadear funções, facilitando a leitura e a organização do código. É útil para manipular dados em sequência, sem a necessidade de variáveis intermediárias. Ele permite que o resultado de uma expressão do lado esquerdo seja automaticamente passado como o primeiro argumento da função no lado direito.\n\nA função \"`aes()`\" (aesthetics) é utilizada dentro da função ggplot() para especificar como as variáveis do seu dataset são mapeadas para aspectos visuais, como: Eixos: As variáveis que serão usadas para os eixos X e Y. Cores: A variável que determina as cores dos pontos, linhas ou barras. Formas: A variável que determina o tipo de forma dos pontos (por exemplo, círculos, quadrados). Tamanho: A variável que determina o tamanho dos elementos gráficos.\n","srcMarkdownNoYaml":"\n\n# Notas de Aula\n\n# Aula 1 \\_ Introdução ao R studio\n\n## Começando com um teste inicial\n\nNeste chunk temos um exemplo de como criar **objetos** onde serão atribuidos valores.\n\nPara criar objetos, inicialmente criamos um nome para o objeto, seguido dos simbolos \"\\<-\", que é um sinal de atribuição. No exemplo abaixo criamos o objeto \"a\", onde a recebeu o valor 1.\n\n```{r}\na <- 1 \na \nb <- 2\nb\nc <- a+b\nc\n```\n\n#### Além de códigos, também podemos escrever testos no seu documento, aqui vão alguns comandos extras para edição de textos no seu documento:\n\num \\* *deixa em itálico ou* (Ctrl+i); para **negrito** (Ctrl+b); para inserir *link* (Ctrl+k); para inserir novo chunk (Ctrl+alt+i); usar \"\" para sinalizar que é texto e não uma função.\n\nPara explicar mais funções iniciais, vamos importar um conjunto de dados do próprio R.\n\n## Importando um conjunto de dados\n\nNo exemplo abaixo vamos criar o objeto \"dados\" e usando a função que vimso acima, vamos atibuir a ele o conjunto de dados Oranje, que são dados agrupados de um conjunto de dados do R.\n\n```{r}\nOrange\ndados <- Orange\ndados\n```\n\nAos objetos ou data frames (conjunto de dados), podemos aplicar funções, para executar ações. Como é o exemplo da função `plot()`. Esta função é básica do R e serve para plotar gráficos que permitem visualizar os dados de forma gráfica para uma análise visual rápida. Lembre-se que, não basta chamar a função, o seu objeto/data frame deve estar dentro de \"()\" para que a função seja executada.\n\n```{r}\nplot(dados)\n```\n\nMas para visualizar os dados de maneira correta é importante saber o que voce precisa/quer visualizar. Ao chamar \"dados\" podemos observar que o data frame é composto por 3 colunas: Tree, age, circunference. Podemos então utilizar outras funções para nos auxiliar.\n\n```{r}\nplot(dados$circumference) \nplot(dados$Tree) \nplot(dados$age)\n```\n\nAcima utilizamos o sinal \"\\$\", utilizado para isolar um vetor de dados específico do data frame.\n\nPodemos criar um novo objeto e atribuir a ele o vetor de dados isolado.\n\nOu, podemos utilizar a função \"`attach`\" para desagregar o data frame e criar vetores independentes.\n\nBônus: a função \"`detach`\" é o oposto da função anterior.\n\n```{r}\ncirc <- dados$circumference \ncirc \n#ou \nattach(dados) \ncircumference \n```\n\n# Pacotes\n\nOs chamados \"pacotes\" no R são um conjunto de funções, ferramentas (ou como vimos acima, dados) prontos, que forma criados (ou já vem no R base). São utilizados para realizar atividdaes especificas no R, como plotar gráficos personalizaveis, como é o exemplo do pacote \"ggplot2\".\n\nInicialmente utilizamos a função \"`library()`\", para ativar/carregar o pacote. Caso o pacote ainda não esteja instalado em sua biblioteca, utilizamos a função \"`install.packages()`\" para que o pacote seja instalado.\n\n### Agricolae\n\nNeste exemplo ativaremos o pacote \"agricolae\", que é uma ferramenta para análise estatistica para pesquisa com experimentos agrícolas.\n\n```{r}\n#install.packages(\"agricolae\")\nlibrary(agricolae)\ndates <- c (7,14,21,28,35,42)\ndates\nseverity <- c (0.1, 5, 10, 35, 50, 60)\nseverity \naudpc (severity, dates)\n\n#carregando outro pacote de dados/dataframe\ndata(\"corn\")\nstr(corn)\n```\n\nNo chunk acima, além de ativar a biblioteca, criamos um vetor de dados numéricos. Usando a função `c().` O vetor de dados armazena uma sequencia de dados.\n\nPara o vetor de dados criado, utilizamos a função \"audpc\". Este é um comando do pacote agricolae para calcular a área abaixo da curva sobre severiade de doenças ao longo do tempo.\n\nDepois usamos o comando \"str\" que é um comando do pacote agricolae que é útil para verificar rapidamente a estrutura de um objeto, especialmente quando se trabalha com conjuntos de dados maiores.\n\n### Tidyverse\n\nO pacote \"tidyverse\" possui uma série de funções diferentes, que facilitam o tratamento de dados. Alguns exemplos são: pacotes para importação de dados (readr, readxl), visualização de dados (ggplot2), manipulação de dados (dplyr , tidyr), criação de modelos (tidymodels) etc.\n\n```{r}\nlibrary(tidyverse)\ndates <- c (7,14,21,28,35,42)\nseverity <- c (0.1, 5, 10, 35, 50, 60)\n#Juntando dates e severity em um objeto\ndata_curva <- data.frame(dates, severity)\ndata_curva\nstr(data_curva)\n```\n\n#### ggplot\n\nEsta é a função principal do pacote **ggplot2**, que faz parte do pacote ativado no chunk anterior, **tidyverse**.\\\nCom ele, vamos construir gráficos editaveis.\n\n#### dplyr\n\nÉ mais uma função do pacote **tidyverse,** é útil para **manipular** dados (filtrar, selecionar, agrupar)\n\n```{r}\nlibrary(dplyr)\nlibrary(ggplot2)\ndata_curva |> \n  ggplot(aes(dates, severity))+\n  geom_area(fill=\"lightblue\", alpha= 0.5)+geom_line(color= \"orange\", size=1)+geom_point(color=\"darkblue\", size=2)\n\n# explicação de alguns comandos:\n#geom_area(fill = \"lightblue\", alpha = 0.5) muda a cor da área\n#geom_line(color = \"orange\", size = 1)  muda a cor da linha\n#geom_point(color = \"darkblue\", size = 2) muda a cor dos pontos\n\n#para adicionar outra variável no gráfico \nseverity2 <- c(1,10,35,58,70,79)\ndata.frame(severity2)\n\n  data_curva |> \n    mutate(severity2 = c(1, 10, 35, 58, 70, 90)) |> # Adiciona a nova coluna aqui\n     ggplot(aes(dates, severity))+\n  geom_area(fill=\"lightblue\", alpha= 0.5)+\n    geom_line(color= \"orange\", linewidth=2)+\n    geom_point(color=\"darkblue\", size=2)+\n    theme_minimal()+ #muda tema do gráfico\n    labs(title = \"Progresso da Severidade da Doença\", subtitle = \"Avaliação ao longo dos dias\", x = \"Dias após a inoculação\", y = \"Severidade (%)\", caption = \"Fonte: Experimento 2025\")+ #para customizar o gráfico, eixos, títulos e etc\n    scale_y_continuous(limits = c (0,100))+\n    scale_x_continuous(limits = c (0, 44)) #para mudar a escala dos eixos\n  \n```\n\nO comando \"`|>`\" é conhecido como \"pipe\" e serve para encadear funções, facilitando a leitura e a organização do código. É útil para manipular dados em sequência, sem a necessidade de variáveis intermediárias. Ele permite que o resultado de uma expressão do lado esquerdo seja automaticamente passado como o primeiro argumento da função no lado direito.\n\nA função \"`aes()`\" (aesthetics) é utilizada dentro da função ggplot() para especificar como as variáveis do seu dataset são mapeadas para aspectos visuais, como: Eixos: As variáveis que serão usadas para os eixos X e Y. Cores: A variável que determina as cores dos pontos, linhas ou barras. Formas: A variável que determina o tipo de forma dos pontos (por exemplo, círculos, quadrados). Tamanho: A variável que determina o tamanho dos elementos gráficos.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Aula_1_Introdução_ao_R_Studio.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","theme":"flatly","toc_float":{"collapsed":false,"smooth_scroll":false},"lib_dir":"site_libs","self_contained":true,"title":"aula_1_Introdução_ao_R_studio","author":"Karine Mesquita","editor":"visual","editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}