{"title":"Aula_3_Testes_estatisticos","markdown":{"yaml":{"title":"Aula_3_Testes_estatisticos","author":"Karine Mesquita","format":{"html":{"code-fold":true,"code-tools":true,"toc":true}},"editor":"visual","editor_options":{"chunk_output_type":"inline"},"execute":{"warning":false,"message":false,"echo":true,"include":true}},"headingText":"Notas de aula","containsRefs":false,"markdown":"\n\n\n# Aula 3_Testes estatisticos\n\nNesta aula, aprendemos alguns testes estatisticos basicos, dependendo do tipo de análises.\n\n## Testes para amostras independentes\n\n```{r}\n#Dica: para procurar de que pacote a função vem, pesquisa na internet o nome da função, seguido de in r.\n#ativa os pacotes necessários \nlibrary(gsheet)\nlibrary(ggplot2)\nlibrary(stats)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(report)\nlibrary(rstatix)\nlibrary(ggpubr)\nlibrary(multcomp)\n#install_packages(\"see\")\n\n#cria o objeto com os dados que serão utilizados. Esses dados são da planilha dados-diversos, disponibilizada pelo professor. \n\ndat_mg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n\n#faz primeiro o plot para analizar vsualmente os dados \ndat_mg |> \n  ggplot(aes(trat, comp))+\n  geom_jitter(width = 0.1)\n\n```\n\n### Testes para saber se há diferença estatistica\n\n#### Teste T para amostras independentes\n\n```{r}\n\n?t.test \n#usando o caractere \"?\" seguido do nome da função, serve para mostrar como o comendo funciona, lhe dá mais informações sobre pacotes e funções. \n\n#transformar a planilha do formato longo para o formato largo  \ndat_mg2 <- dat_mg |>\n  pivot_wider(names_from = trat, values_from= comp)|>\n  dplyr::select(-rep)\n\nattach(dat_mg2)\nt.test(Mg2, control) #Teste T, que compara os tratamentos.\nsaída_t_teste <- t.test(Mg2, control) #cria um objeto para receber o resultado do teste T\n\n#invertendo as variáveis \nt.test(control, Mg2)\nsaída_teste_T <- t.test(control, Mg2) #cria um objeto para receber o resultado do teste T\n\n#aplica a função report para gerar texto de interpretação dde saída dos resultados, neste caso para o teste T \nlibrary(report)\nreport(saída_teste_T)\n\n#função para quando a tabela está no formato longo e não no largo, sem necessidade de transformação dos dados na tabela \nlibrary(rstatix)\nt_test(comp ~ trat, data = dat_mg)\ntest_t <- t_test(comp ~ trat, data = dat_mg)\ntest_t\n\n#Plotando o resultado do teste T e adicionando o valor de P manualmente \n#install.packages(\"ggpubr\")\nlibrary(ggpubr)\n\np <- ggboxplot(\n  dat_mg, x = \"trat\", y = \"comp\", \n  color = \"trat\", palette = \"jco\")\n\nprint(p) #comando para mostrar o gráfico plotado, caso não apareça \n\n#adiciona o valor de P manulamente \n\np + stat_pvalue_manual(test_t, label = \"p\",\n  y.position = 18)+\n    ylim(0,20)+\n  labs(x = \"Tratamento\",\n       y = \"Comprimento (mm)\")\n\nggsave(\"plot2.png\", bg = \"white\" ) #comando para salvar o gráfico \n\n```\n\n#### Teste de normalidade\n\n```{r}\n#testando a normalidade dos dados acima \nshapiro.test(Mg2)\nshapiro.test(control)\nhist(Mg2)\nhist(control)\n\n# análise de variancia para validar o teste T, variancia e homogeneidade\nvar.test(dat_mg2$Mg2,\n         dat_mg2$control)\n\n#ajuste no teste T caso as variancias não sejam homogeneas \nt.test(control, Mg2, var.equal = FALSE)\n\n```\n\n### Teste T para amostras dependentes\n\n```{r}\nlibrary(gsheet)\nescala <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1729131173#gid=1729131173\")\nescala\n\nt_test(acuracia ~ assessment, \n       data = escala,\n       paired = TRUE,\n       var.equal = FALSE)\n\nt_test\n       \n#plotando o gráfico para análise visual\nlibrary(ggplot2)\n\nescala |> \n  ggplot(aes(assessment, acuracia))+\n  geom_boxplot()\n\nunaided <- escala |> \n  dplyr::filter(assessment == \"Unaided\") |> \n  dplyr::select(acuracia) |> \n  dplyr::pull()\n\nunaided \n\naided <- escala |> \n  dplyr::filter(assessment == \"Aided1\") |> \n  dplyr::select(acuracia) |> \n  dplyr::pull() \n\naided\n\n#faz um teste de variancia \n  var.test(unaided, aided)\n  hist(unaided)\n  hist(aided)\n  shapiro.test(unaided)\n  shapiro.test(aided) \n  \n  #como a variancia foi heterogenea, faz o seguinte ajuste no teste\n  t.test(unaided, aided, paired = TRUE, \n         var.equal = FALSE)\n  \n  #teste de Wilcoxon se apresenta como uma alterativa ao teste t pareado, ou seja, quando o objetivo também é verificar se existe diferença significativa de uma variável numérica entre dois grupos de interesse.\n  wilcox.test(unaided, aided)\n  \n  #teste equivalente Mann-Whitney é o teste não paramétrico equivalente ao teste t para amostras independentes\n  wilcox.test(unaided, aided, paired = FALSE)\n  #paired = false o transforma num mann-whitney \n  \n```\n\n### Testes para 3 ou mais niveis de fator (3 ou mais tratamentos)\n\n```{r}\n  micelial <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=959387827#gid=959387827\")\n  \n  #Análise visual \n  \n  micelial |> \n    ggplot(aes(especie, tcm))+\n    geom_boxplot(outlier.colour = NA)+\n    geom_jitter(width = 0.1)\n  \n  #Anova \n  anova1 <- aov(tcm ~ especie, data = micelial)\n  anova1 \n  anova(anova1)\n  \n  #outra forma de fazer a ANOVA\n  anova2 <- lm(tcm ~ especie, data = micelial)\n    anova(anova2)\n\n    \n    #residuo é a diferença entre o estimado pelo modelo e o observado \n    #será que os resíduos são normais? \n    residuals(anova1) #resíduos da anova\nhist(residuals(anova1))\nshapiro.test(residuals(anova1)) #testa a normalidade dos resíduos\n    \n    #teste para variancias de modelo \n\n    #teste bartlett testa se as variancias são homogeneas\n\n    bartlett.test(tcm ~ especie, data = micelial)\n    \n    #teste de levene tem o mesmo propósito (menos sensível a desvios de normalidade\n    levene_test(tcm ~especie, data = micelial)\n    \n  #Use Levene quando os dados não forem normalmente distribuídos.\n#Use Bartlett quando os dados forem normalmente distribuídos.\n#Se ambos os testes indicarem que as variâncias são iguais, você pode seguir com a ANOVA.\n    \n  library(emmeans)\n    #pacote para calcular as médias do modelo e intervalo de confiança. Realiza contrastes e estimativas de médias após a modelagem estatística\n      m <- emmeans(anova2, ~ especie)\n  m \n  \n  #emmeans nos deu a média por espécies, então usa o multicomp para comparar e visualizar as diferenças entre elas  \n  #install.packages(\"multcomp\")\n  #install.packages(\"multcompView\")\n  library(multcomp)\n  library(multcompView)\n  #o pacote multcom realiza comparações múltiplas (post hoc) após modelos lineares, modelos lineares generalizados, e outros tipos de modelos\n  \n  cld(m) #mostra letras compactas, ou seja, os grupos. Nesse caso, do emmeans\n\n pwpm(m) #mostra as médias na diagonal e compara entre os tratamentos em forma de matriz \n \n pairs(m) #mostra as médias em lista e compara, igual o anterior, mas com formas de saída diferentes. Mostra os resultados pareados\n \n#no caso acima a  normalidade estava ok e as variancias eram nos resíduos \n \n```\n\n### Quando os dados não seguem distribuição normal...\n\n```{r}\n#aqui utilizamos um banco de dados do proprio R. \n\ninsetos <- InsectSprays\nView(insetos) #comando para visualizar o conjunto de dados\n\n insetos |> \n   ggplot(aes(spray, count))+\n   geom_boxplot(outlier.colour = NA)+\n   geom_jitter(width = 0.1)\n \n #modelo de anova para inspecionar normalidade e variancia \n anova3 <- lm(count ~spray, data = insetos)\n   anova(anova3)\n \n   #teste para variaveis homogeneas \n   bartlett.test(count ~spray, data = insetos)\n   #sempre que a variancia for heterogenea tem que ajustar \n   \n  #Ajusta um modelo linear (lm) para verificar se o tipo de spray tem efeito no número de insetos mortos (count) \n   \n   m2 <- lm(count ~spray, data = insetos)\n   hist(residuals (m2))\n   shapiro.test(residuals(m2))\n   #neste caso não é distribuição normal e nem homogenea \n   \n   #verificar visualmente se os resíduos do modelo m2 seguem uma distribuição normal\n   qqnorm(residuals(m2))\n   qqline(residuals(m2))\n   #quando chamar qqnorm e qqline juntos a linha e os pontos tem que estar juntos, para ser de fato normal, indicar normalidade.  \n  \n```\n\n### Alternativas quando os dados não seguirem normalidade e homogenedade\n\nTem 3 alternativas para os casos em que isso ocorra, dados não normais e heterogeneos (em ANOVA)\n\n#### Alternativa 1: transformação de dados, transformar a resposta\n\n```{r}\n   #primeiro testa função log\n   m3 <- lm(log(count + 0.1) ~spray, data = insetos)\n   hist(residuals (m3))\n   shapiro.test(residuals(m3))\n   qqnorm(residuals(m3))\n     qqline(residuals(m3))\n  \n   #continuou com o erro, agora testa raiz quadrada \n   \n   #REGRA: neste caso a raiz é uma boa saída pois quando são dados de contagem numa distribuição de poisson não normal, a raiz quadrada tende a normalizar a contagem individual. \n  #aplica o modelo raiz quadrada e aplica a Anova parametrica normal \n  \n   m4 <- lm(sqrt(count) ~ spray, data = insetos)\n   hist(residuals (m4))\n   shapiro.test(residuals(m4))\n   qqnorm(residuals(m4))\n   qqline(residuals(m4))\n   \n   #testar se as variâncias são homogêneas\n   bartlett.test(sqrt(count) ~spray, data = insetos)\n   anova(m4)\n   report(m4)\n   \n   m44 <- emmeans(m4, ~spray, type = \"response\")\n   cld(m44)\n   plot(m44)\n```\n\n#### Alternativa 2: teste não parametrico equivalente a anova\n\n```{r}\n#ou seja ele não depende das duas premissas de normalidade e homogeneidade, ele faz um ranqueamento, tipo o wilcox\n\n   #O teste de Kruskal-Wallis é um método estatístico não paramétrico que compara se três ou mais grupos têm a mesma distribuição. \n\n   #mas este teste só diz que pelo menos um é diferente, mas não aponta quais são. \n   \n   kruskal.test(count ~ spray, data = insetos)\n   kruskal_test(insetos, count ~ spray)\n   \n   #Para realizar o teste de Kruskal-Wallis e fazer comparações múltiplas pós-hoc entre os grupos, semelhante ao Tukey, mas para dados não paramétricos.\n   \n   library(agricolae) \n   kruskal.test(insetos$count, insetos$spray, group = TRUE, console = TRUE) \n   #Mostra o p valor e a diferença entre as médias. O \"group = true\" exibe as letras dos agrupamentos, enquanto \"console = true\" apresenta os resultados no console\n   \n   #como foi significante, transforma para rank para fazer o não parametrico. \n   \n  m5 <- lm(rank(count) ~spray, data = insetos)\n  m5\n   hist(residuals (m5))\n   shapiro.test(residuals(m5))\n   qqnorm(residuals(m5))\n   qqline(residuals(m5))\n   \n   #quando partir para a alternativa a anova parametrica? ou seja, quando não possui normalidade nem homogeneidade dos dados.(usando shapiro-wilk, que testa normalidade dos residuos, e o bartlett ou levene que testam a homogeneidade)\n   \n   #essas comparações multiplas são post-hoc, as duas primeiras opções, mas quando não dá siguinificativo não faz post hoc, pois não tem diferença entre grupos \n  \n    #quando não tem via de transformação, nada resolveu o problema de normalidade e homocedasticidade, tem que usar não parametrico mesmo!\n   \n```\n\n```{r}\n    #utilizando o pacote DHARMa \n#install.packages(\"DHARMa\")\nlibrary(DHARMa)\n\n   #faz uma simulação dos residuos, não pega somente  observação \n   #o DHARMa é mais intuitivo, ao invés de usar Levene, hist, qqnorm, shapiro..., pode usar o teste DHARMa como padrão. Para ver visualmente todas estas estatisticas em uma única função, por meio da simulação dos resíduos. Dando siguinificativo, vai para os testes post hoc\n   \nlibrary(emmeans)\nlibrary(tidyverse)\n\ninsetos <- InsectSprays\nView(insetos)\nm2 <- lm(count ~ spray, data = insetos) #variâncias não são homogêneas\nplot(simulateResiduals(m2))\n    \nm2 <- lm(log(count+1) ~ spray, data = insetos) #transformar os dados para tornar as variâncias homogêneas\nplot(simulateResiduals(m2))\n\n    library(emmeans) #para estimar as médias\nlibrary(multcomp)\nm2.2 <- emmeans(m2, ~ spray, type = \"response\")\ncld(m2.2)\n   \n```\n\n#### Alternativa 3: alternativa paramétrica - Modelos lineares generalizados (GLMs)\n\n```{r}\n   #nas ANOVAs, possuem um tipos especial de modelo linear generalizado, onde a distribuição é normal, Gaussiana, existem familias de dirtrubuição. \n   #no caso de dados de contagem, como de insetos, usa de Poisson, neste caso não galsiana. \n   \n      m2.3 <- glm(count ~ spray, data = insetos, \n             family = poisson)\n      \n         m2.3 \n         anova(m2.3)\n          plot(simulateResiduals(m2.3))\n          \n         library(car)\n         Anova(m2.3)\n         medias_m2.3 <- emmeans(m2.3, ~ spray, type = \"response\")\n         medias_m2.3\n         cld(medias_m2.3)\n   \n    #outra forma de testar o modelo \n         #install.packages(\"performance\") \n         library(performance)\n        performance(m2.3)\n        check_model(m2.3)\n        \n        #dados de sim e não, usa a familia binomial \n        #o professor recomenda usar o DHARMa ao invés do check model, ele não é tão consistente  \n```\n","srcMarkdownNoYaml":"\n\n# Notas de aula\n\n# Aula 3_Testes estatisticos\n\nNesta aula, aprendemos alguns testes estatisticos basicos, dependendo do tipo de análises.\n\n## Testes para amostras independentes\n\n```{r}\n#Dica: para procurar de que pacote a função vem, pesquisa na internet o nome da função, seguido de in r.\n#ativa os pacotes necessários \nlibrary(gsheet)\nlibrary(ggplot2)\nlibrary(stats)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(report)\nlibrary(rstatix)\nlibrary(ggpubr)\nlibrary(multcomp)\n#install_packages(\"see\")\n\n#cria o objeto com os dados que serão utilizados. Esses dados são da planilha dados-diversos, disponibilizada pelo professor. \n\ndat_mg <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n\n#faz primeiro o plot para analizar vsualmente os dados \ndat_mg |> \n  ggplot(aes(trat, comp))+\n  geom_jitter(width = 0.1)\n\n```\n\n### Testes para saber se há diferença estatistica\n\n#### Teste T para amostras independentes\n\n```{r}\n\n?t.test \n#usando o caractere \"?\" seguido do nome da função, serve para mostrar como o comendo funciona, lhe dá mais informações sobre pacotes e funções. \n\n#transformar a planilha do formato longo para o formato largo  \ndat_mg2 <- dat_mg |>\n  pivot_wider(names_from = trat, values_from= comp)|>\n  dplyr::select(-rep)\n\nattach(dat_mg2)\nt.test(Mg2, control) #Teste T, que compara os tratamentos.\nsaída_t_teste <- t.test(Mg2, control) #cria um objeto para receber o resultado do teste T\n\n#invertendo as variáveis \nt.test(control, Mg2)\nsaída_teste_T <- t.test(control, Mg2) #cria um objeto para receber o resultado do teste T\n\n#aplica a função report para gerar texto de interpretação dde saída dos resultados, neste caso para o teste T \nlibrary(report)\nreport(saída_teste_T)\n\n#função para quando a tabela está no formato longo e não no largo, sem necessidade de transformação dos dados na tabela \nlibrary(rstatix)\nt_test(comp ~ trat, data = dat_mg)\ntest_t <- t_test(comp ~ trat, data = dat_mg)\ntest_t\n\n#Plotando o resultado do teste T e adicionando o valor de P manualmente \n#install.packages(\"ggpubr\")\nlibrary(ggpubr)\n\np <- ggboxplot(\n  dat_mg, x = \"trat\", y = \"comp\", \n  color = \"trat\", palette = \"jco\")\n\nprint(p) #comando para mostrar o gráfico plotado, caso não apareça \n\n#adiciona o valor de P manulamente \n\np + stat_pvalue_manual(test_t, label = \"p\",\n  y.position = 18)+\n    ylim(0,20)+\n  labs(x = \"Tratamento\",\n       y = \"Comprimento (mm)\")\n\nggsave(\"plot2.png\", bg = \"white\" ) #comando para salvar o gráfico \n\n```\n\n#### Teste de normalidade\n\n```{r}\n#testando a normalidade dos dados acima \nshapiro.test(Mg2)\nshapiro.test(control)\nhist(Mg2)\nhist(control)\n\n# análise de variancia para validar o teste T, variancia e homogeneidade\nvar.test(dat_mg2$Mg2,\n         dat_mg2$control)\n\n#ajuste no teste T caso as variancias não sejam homogeneas \nt.test(control, Mg2, var.equal = FALSE)\n\n```\n\n### Teste T para amostras dependentes\n\n```{r}\nlibrary(gsheet)\nescala <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1729131173#gid=1729131173\")\nescala\n\nt_test(acuracia ~ assessment, \n       data = escala,\n       paired = TRUE,\n       var.equal = FALSE)\n\nt_test\n       \n#plotando o gráfico para análise visual\nlibrary(ggplot2)\n\nescala |> \n  ggplot(aes(assessment, acuracia))+\n  geom_boxplot()\n\nunaided <- escala |> \n  dplyr::filter(assessment == \"Unaided\") |> \n  dplyr::select(acuracia) |> \n  dplyr::pull()\n\nunaided \n\naided <- escala |> \n  dplyr::filter(assessment == \"Aided1\") |> \n  dplyr::select(acuracia) |> \n  dplyr::pull() \n\naided\n\n#faz um teste de variancia \n  var.test(unaided, aided)\n  hist(unaided)\n  hist(aided)\n  shapiro.test(unaided)\n  shapiro.test(aided) \n  \n  #como a variancia foi heterogenea, faz o seguinte ajuste no teste\n  t.test(unaided, aided, paired = TRUE, \n         var.equal = FALSE)\n  \n  #teste de Wilcoxon se apresenta como uma alterativa ao teste t pareado, ou seja, quando o objetivo também é verificar se existe diferença significativa de uma variável numérica entre dois grupos de interesse.\n  wilcox.test(unaided, aided)\n  \n  #teste equivalente Mann-Whitney é o teste não paramétrico equivalente ao teste t para amostras independentes\n  wilcox.test(unaided, aided, paired = FALSE)\n  #paired = false o transforma num mann-whitney \n  \n```\n\n### Testes para 3 ou mais niveis de fator (3 ou mais tratamentos)\n\n```{r}\n  micelial <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=959387827#gid=959387827\")\n  \n  #Análise visual \n  \n  micelial |> \n    ggplot(aes(especie, tcm))+\n    geom_boxplot(outlier.colour = NA)+\n    geom_jitter(width = 0.1)\n  \n  #Anova \n  anova1 <- aov(tcm ~ especie, data = micelial)\n  anova1 \n  anova(anova1)\n  \n  #outra forma de fazer a ANOVA\n  anova2 <- lm(tcm ~ especie, data = micelial)\n    anova(anova2)\n\n    \n    #residuo é a diferença entre o estimado pelo modelo e o observado \n    #será que os resíduos são normais? \n    residuals(anova1) #resíduos da anova\nhist(residuals(anova1))\nshapiro.test(residuals(anova1)) #testa a normalidade dos resíduos\n    \n    #teste para variancias de modelo \n\n    #teste bartlett testa se as variancias são homogeneas\n\n    bartlett.test(tcm ~ especie, data = micelial)\n    \n    #teste de levene tem o mesmo propósito (menos sensível a desvios de normalidade\n    levene_test(tcm ~especie, data = micelial)\n    \n  #Use Levene quando os dados não forem normalmente distribuídos.\n#Use Bartlett quando os dados forem normalmente distribuídos.\n#Se ambos os testes indicarem que as variâncias são iguais, você pode seguir com a ANOVA.\n    \n  library(emmeans)\n    #pacote para calcular as médias do modelo e intervalo de confiança. Realiza contrastes e estimativas de médias após a modelagem estatística\n      m <- emmeans(anova2, ~ especie)\n  m \n  \n  #emmeans nos deu a média por espécies, então usa o multicomp para comparar e visualizar as diferenças entre elas  \n  #install.packages(\"multcomp\")\n  #install.packages(\"multcompView\")\n  library(multcomp)\n  library(multcompView)\n  #o pacote multcom realiza comparações múltiplas (post hoc) após modelos lineares, modelos lineares generalizados, e outros tipos de modelos\n  \n  cld(m) #mostra letras compactas, ou seja, os grupos. Nesse caso, do emmeans\n\n pwpm(m) #mostra as médias na diagonal e compara entre os tratamentos em forma de matriz \n \n pairs(m) #mostra as médias em lista e compara, igual o anterior, mas com formas de saída diferentes. Mostra os resultados pareados\n \n#no caso acima a  normalidade estava ok e as variancias eram nos resíduos \n \n```\n\n### Quando os dados não seguem distribuição normal...\n\n```{r}\n#aqui utilizamos um banco de dados do proprio R. \n\ninsetos <- InsectSprays\nView(insetos) #comando para visualizar o conjunto de dados\n\n insetos |> \n   ggplot(aes(spray, count))+\n   geom_boxplot(outlier.colour = NA)+\n   geom_jitter(width = 0.1)\n \n #modelo de anova para inspecionar normalidade e variancia \n anova3 <- lm(count ~spray, data = insetos)\n   anova(anova3)\n \n   #teste para variaveis homogeneas \n   bartlett.test(count ~spray, data = insetos)\n   #sempre que a variancia for heterogenea tem que ajustar \n   \n  #Ajusta um modelo linear (lm) para verificar se o tipo de spray tem efeito no número de insetos mortos (count) \n   \n   m2 <- lm(count ~spray, data = insetos)\n   hist(residuals (m2))\n   shapiro.test(residuals(m2))\n   #neste caso não é distribuição normal e nem homogenea \n   \n   #verificar visualmente se os resíduos do modelo m2 seguem uma distribuição normal\n   qqnorm(residuals(m2))\n   qqline(residuals(m2))\n   #quando chamar qqnorm e qqline juntos a linha e os pontos tem que estar juntos, para ser de fato normal, indicar normalidade.  \n  \n```\n\n### Alternativas quando os dados não seguirem normalidade e homogenedade\n\nTem 3 alternativas para os casos em que isso ocorra, dados não normais e heterogeneos (em ANOVA)\n\n#### Alternativa 1: transformação de dados, transformar a resposta\n\n```{r}\n   #primeiro testa função log\n   m3 <- lm(log(count + 0.1) ~spray, data = insetos)\n   hist(residuals (m3))\n   shapiro.test(residuals(m3))\n   qqnorm(residuals(m3))\n     qqline(residuals(m3))\n  \n   #continuou com o erro, agora testa raiz quadrada \n   \n   #REGRA: neste caso a raiz é uma boa saída pois quando são dados de contagem numa distribuição de poisson não normal, a raiz quadrada tende a normalizar a contagem individual. \n  #aplica o modelo raiz quadrada e aplica a Anova parametrica normal \n  \n   m4 <- lm(sqrt(count) ~ spray, data = insetos)\n   hist(residuals (m4))\n   shapiro.test(residuals(m4))\n   qqnorm(residuals(m4))\n   qqline(residuals(m4))\n   \n   #testar se as variâncias são homogêneas\n   bartlett.test(sqrt(count) ~spray, data = insetos)\n   anova(m4)\n   report(m4)\n   \n   m44 <- emmeans(m4, ~spray, type = \"response\")\n   cld(m44)\n   plot(m44)\n```\n\n#### Alternativa 2: teste não parametrico equivalente a anova\n\n```{r}\n#ou seja ele não depende das duas premissas de normalidade e homogeneidade, ele faz um ranqueamento, tipo o wilcox\n\n   #O teste de Kruskal-Wallis é um método estatístico não paramétrico que compara se três ou mais grupos têm a mesma distribuição. \n\n   #mas este teste só diz que pelo menos um é diferente, mas não aponta quais são. \n   \n   kruskal.test(count ~ spray, data = insetos)\n   kruskal_test(insetos, count ~ spray)\n   \n   #Para realizar o teste de Kruskal-Wallis e fazer comparações múltiplas pós-hoc entre os grupos, semelhante ao Tukey, mas para dados não paramétricos.\n   \n   library(agricolae) \n   kruskal.test(insetos$count, insetos$spray, group = TRUE, console = TRUE) \n   #Mostra o p valor e a diferença entre as médias. O \"group = true\" exibe as letras dos agrupamentos, enquanto \"console = true\" apresenta os resultados no console\n   \n   #como foi significante, transforma para rank para fazer o não parametrico. \n   \n  m5 <- lm(rank(count) ~spray, data = insetos)\n  m5\n   hist(residuals (m5))\n   shapiro.test(residuals(m5))\n   qqnorm(residuals(m5))\n   qqline(residuals(m5))\n   \n   #quando partir para a alternativa a anova parametrica? ou seja, quando não possui normalidade nem homogeneidade dos dados.(usando shapiro-wilk, que testa normalidade dos residuos, e o bartlett ou levene que testam a homogeneidade)\n   \n   #essas comparações multiplas são post-hoc, as duas primeiras opções, mas quando não dá siguinificativo não faz post hoc, pois não tem diferença entre grupos \n  \n    #quando não tem via de transformação, nada resolveu o problema de normalidade e homocedasticidade, tem que usar não parametrico mesmo!\n   \n```\n\n```{r}\n    #utilizando o pacote DHARMa \n#install.packages(\"DHARMa\")\nlibrary(DHARMa)\n\n   #faz uma simulação dos residuos, não pega somente  observação \n   #o DHARMa é mais intuitivo, ao invés de usar Levene, hist, qqnorm, shapiro..., pode usar o teste DHARMa como padrão. Para ver visualmente todas estas estatisticas em uma única função, por meio da simulação dos resíduos. Dando siguinificativo, vai para os testes post hoc\n   \nlibrary(emmeans)\nlibrary(tidyverse)\n\ninsetos <- InsectSprays\nView(insetos)\nm2 <- lm(count ~ spray, data = insetos) #variâncias não são homogêneas\nplot(simulateResiduals(m2))\n    \nm2 <- lm(log(count+1) ~ spray, data = insetos) #transformar os dados para tornar as variâncias homogêneas\nplot(simulateResiduals(m2))\n\n    library(emmeans) #para estimar as médias\nlibrary(multcomp)\nm2.2 <- emmeans(m2, ~ spray, type = \"response\")\ncld(m2.2)\n   \n```\n\n#### Alternativa 3: alternativa paramétrica - Modelos lineares generalizados (GLMs)\n\n```{r}\n   #nas ANOVAs, possuem um tipos especial de modelo linear generalizado, onde a distribuição é normal, Gaussiana, existem familias de dirtrubuição. \n   #no caso de dados de contagem, como de insetos, usa de Poisson, neste caso não galsiana. \n   \n      m2.3 <- glm(count ~ spray, data = insetos, \n             family = poisson)\n      \n         m2.3 \n         anova(m2.3)\n          plot(simulateResiduals(m2.3))\n          \n         library(car)\n         Anova(m2.3)\n         medias_m2.3 <- emmeans(m2.3, ~ spray, type = \"response\")\n         medias_m2.3\n         cld(medias_m2.3)\n   \n    #outra forma de testar o modelo \n         #install.packages(\"performance\") \n         library(performance)\n        performance(m2.3)\n        check_model(m2.3)\n        \n        #dados de sim e não, usa a familia binomial \n        #o professor recomenda usar o DHARMa ao invés do check model, ele não é tão consistente  \n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Aula_3_Testes_estatisticos.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.32","theme":"flatly","toc_float":{"collapsed":false,"smooth_scroll":false},"lib_dir":"site_libs","self_contained":true,"title":"Aula_3_Testes_estatisticos","author":"Karine Mesquita","editor":"visual","editor_options":{"chunk_output_type":"inline"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}