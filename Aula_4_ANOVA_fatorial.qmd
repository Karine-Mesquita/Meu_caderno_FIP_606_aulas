---
title: "Aula_4_ANOVA_fatorial"
author: "Karine Mesquita"
format: 
  html:
    code-fold: true       # permite esconder/mostrar os códigos (com uma abinha)
    code-tools: true      # adiciona botões de copiar/mostrar código
    toc: true             # inclui um sumário (índice)
editor: visual
editor_options: 
  chunk_output_type: console
execute:
  warning: false          # oculta mensagens de warning
  message: false          # oculta mensagens do tipo "package loaded"
  echo: true              # mostra o código
  include: true           # mostra o output dos chunks
---

# Aula 4

## Anova de dois fatores

Dando continuidade a aula anterior, sobre testes estatisticos, esta aula foi voltada para a Analise de variancia (ANOVA) de dois fatores (ou bidirecional). Esta ANOVA testa se há uma diferença entre mais de duas amostras independentes divididas entre duas variáveis ou fatores.

```{r}
#Neste exemplo, vamos testar se a resposta depende do tratamento e da dose. Lembrando que este conjunto de dados pertence a planilha dados diversos disponibilizada em aula pelo professor.  

library(gsheet)

fungicida_vaso <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=2023059672#gid=2023059672")
fungicida_vaso

#Plotar o gráfico para análise visual dos dados 
library(ggplot2)
fungicida_vaso |> 
  ggplot(aes(factor(dose), severity*100))+ #usamos factor para transformar dose em fator
  geom_jitter(width = 0.1)+
  facet_wrap(~treat)


#Testar se o efeito do tratamento depende da dose.
  m_anti <- lm(severity ~ treat*dose, data = fungicida_vaso)
anova(m_anti)

#como deu siguinificativo as interações entre dose e tratamento, decompoe as médias dentro de cada tratamento e dose (trat x dose). Desconsidera os efeitos simples e foca na interação. 
#testar se o modelo esta atende aos pressupostos de normalidade e homogeneidade, usando o DHARMa

library(DHARMa)
plot(simulateResiduals(m_anti))

#como não há problemas, pode seguir com o teste de comparação de médias 
#comando para decompor as médias dos tratamentos dentro das doses.
library(emmeans)
media_anti <- emmeans(m_anti, ~ treat |dose)
media_anti #mostra as médias (no artigo, apresentar em tabela)

library(multcomp)
cld(media_anti) #mostrar as diferenças estatísticas para letras das colunas (maiusculas). 

#decompões as médias de cada dose dentro dos tratamentos.
#mostrar as diferenças estatísticas para letras na linha (minusculas). 
media_anti <- emmeans(m_anti, ~ dose |treat)
media_anti
cld(media_anti)

#para o CV (coeficiente de variação do modelo) da tabela 
library(agricolae)
cv.model(m_anti)

#caso não tivesse inyteração, se fosse não siguinificativo, observar os efeitos simples 
p1 <- fungicida_vaso |> 
  ggplot(aes(factor(dose),severity*100))+
  geom_jitter(width =0.1)
p1

p2 <- fungicida_vaso |> 
  ggplot(aes(factor(treat),severity*100))+
  geom_jitter(width =0.1)
p2 

#Unindo os dois gráficos para comparação
library(patchwork)
p1+p2

#função auxiliar para visualizar se a interação é siguinificativa ou não
interaction.plot(fungicida_vaso$treat, fungicida_vaso$dose, fungicida_vaso$severity, data = fungicida_vaso)

#quando as linhas não são paralelas quer dizer que a interação é siguinificativa e quando são paralelas, interação não siguinificativa 
```

-   Tabela 1 - Resultado do teste de comparação de médias

| Trat     | 0.5     | 2.0  |
|----------|---------|------|
| Li       | 29.2 Aa | 5 Ab |
| TEBU     | 2.1 Ba  | 2 Aa |
| CV = 63% |         |      |

: para inserir tabelas em seu script, basta ir no botão "insert", depois "Table". Ou utilizar o atalho "ctrl+Alt+t".

# Aula 4 - pt.2

```{r}
#install.packages("epifitter")
library(epifitter)
oidio <- PowderyMildew
oidio

oidio |> 
  ggplot(aes(time, sev))+
  geom_point(width = 0.1)+
  facet_wrap(~irrigation_type)

oidio |> 
  ggplot(aes(time, sev))+
  geom_point(width =0.1)+
  facet_grid(irrigation_type ~moisture)


library(dplyr)
oidio |> 
  filter(irrigation_type  %in% c("MS", "MS above canopy", "Overhead")) |> #filtrando as condições desejadas
  ggplot(aes(time, sev*100))+ 
  geom_jitter(width = 0.1)+
  facet_grid(moisture ~ irrigation_type) 

#para calcular área baixo da curva por tratamento e bloco 

library(agricolae)

oidio |> 
  group_by(irrigation_type, moisture, block) |>
  summarise(AUDPC = AUDPC(time, sev))

library(ggpubr)

oidio2 <- oidio |> 
  group_by(irrigation_type, moisture, block) |>
  summarise(AUDPC = AUDPC(time, sev))

oidio3 <- oidio |>
  filter(irrigation_type %in% c("MS", "MS above canopy", "Overhead")) |>
  group_by(irrigation_type, moisture, block) |>
  summarise(AUDPC = AUDPC(time, sev))

oidio3 |> 
  ggplot(aes(irrigation_type, 
             AUDPC, color = moisture))+
  geom_point(size = 2)+
  facet_wrap(~moisture)+
  scale_y_continuous(limits = c(0,20))

#Realizando a ANOVA fatorial
anov_oidio <- lm(sev ~ irrigation_type*moisture, data = oidio)
anova(anov_oidio)

#Realizando a ANOVA fatorial para AUDPC
oidio4 <- oidio3 |> 
  filter(irrigation_type  %in% c("MS", "MS above canopy", "Overhead"))


plot(simulateResiduals(anov_oidio))

medias_oidio <- emmeans(anov_oidio, ~ irrigation_type | moisture)
medias_oidio #mostra as médias
cld(medias_oidio) #compara as médias

medias_oidio2 <- emmeans(anov_oidio, ~ moisture | irrigation_type)
medias_oidio2 #mostra as médias
cld(medias_oidio2) #compara as médias

cv.model(anov_oidio)
```

|            | H.moisture | M.moisture |
|------------|------------|------------|
| irrigation |            |            |
| MS         | 8,52 A a   | 11,18 A b  |
| MS AC      | 3,99 B a   | 4,86 B b   |
| OVERHEAD   | 3,68 B a   | 3,81 C a   |
| CV= 6,41%  |            |            |

##### Pacotes úteis para esta aula

```{r}
library(gsheet)
library(ggplot2)
library(multcomp)
library(stats)
library(dplyr)
library(tidyr)
library(report)
library(rstatix)
library(ggpubr)
library(DHARMa)
install.packages("epifitter") 
```

# 
